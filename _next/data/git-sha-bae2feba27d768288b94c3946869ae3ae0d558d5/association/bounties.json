{"pageProps":{"githubData":{"data":{"search":{"nodes":[{"state":"OPEN","title":"Send original SPARQL query string to endpoints","url":"https://github.com/comunica/comunica/issues/844","number":844,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"_This issue has been modified by @rubensworks to describe the intended solution_\r\n\r\nThe problem is that we always parse the incoming query, and serialize it again when we send it to a SPARQL endpoint. Since this parsing-serializing process sometimes results in slightly different queries, this may cause issues for certain use cases. To solve this, we need to keep track of the original query string, and use that one in the case of querying a SPARQL endpoint.\r\n\r\nIn actor-init-sparql, we need to add the original query string into the context.\r\nIn `actor-query-operation-sparql-endpoint`, we need to check this context entry, and use that one if it exists.\r\n\r\nThe only difficulty here is that we have to make sure that this context entry does not propagate to places where it shouldn't. For example, if this actor is only used because of a `SERVICE` keyword, we need to make sure that the actor still uses the `SERVICE` operation instead of the full original query. We could do this by just making sure that the service operator unsets or overrides this entry.\r\n\r\n-----\r\n\r\nOriginal issue:\r\n\r\n\r\n#### Issue type:\r\n\r\n- :question: Question <!--Don't change this issue type!-->\r\n\r\n____\r\n#### Question:\r\n\r\nI want to query SPARQL endpoint `https://data.muziekschatten.nl/sparql`, backed by Virtuoso, using the query underneath:\r\n\r\n```sparql\r\nSELECT * WHERE {\r\n  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Person>;\r\n    <http://schema.org/name> ?label.\r\n  FILTER(<bif:contains>(?label, \"emile\"))\r\n  BIND(\"no name\" AS ?name)\r\n}\r\nLIMIT 100\r\n```\r\n\r\nIt's a silly query - but the crucial parts are the `FILTER` and the `BIND`. If I execute this using Comunica...\r\n\r\n`npx comunica-sparql sparql@https://data.muziekschatten.nl/sparql -f query.rq`\r\n\r\n...where file `query.rq` contains the query above...then the result is:\r\n\r\n`[Invalid SPARQL endpoint (https://data.muziekschatten.nl/sparql) response: undefined`\r\n\r\nMy guess is that Comunica is rewriting the query, e.g. to:\r\n\r\n```sparql\r\nSELECT * WHERE {\r\n  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Person>;\r\n    <http://schema.org/name> ?label.\r\n  BIND(\"no name\" AS ?name)\r\n  FILTER(<bif:contains>(?label, \"emile\"))\r\n}\r\nLIMIT 100\r\n```\r\n\r\n`FILTER` is placed after `BIND`. If I execute this query via the endpoint's query editor on `https://data.muziekschatten.nl/sparql`, then Virtuoso yields the error:\r\n\r\n`Virtuoso 37000 Error SP031: SPARQL compiler: The group does not contain triple pattern with '$label' object before bif:contains() predicate`.\r\n\r\nIs it possible to influence the way that Comunica rewrites the query?\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\">](https://netwerkdigitaalerfgoed.nl/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\"><em>This issue has been modified by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rubensworks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rubensworks\">@rubensworks</a> to describe the intended solution</em></p>\n<p dir=\"auto\">The problem is that we always parse the incoming query, and serialize it again when we send it to a SPARQL endpoint. Since this parsing-serializing process sometimes results in slightly different queries, this may cause issues for certain use cases. To solve this, we need to keep track of the original query string, and use that one in the case of querying a SPARQL endpoint.</p>\n<p dir=\"auto\">In actor-init-sparql, we need to add the original query string into the context.<br>\nIn <code>actor-query-operation-sparql-endpoint</code>, we need to check this context entry, and use that one if it exists.</p>\n<p dir=\"auto\">The only difficulty here is that we have to make sure that this context entry does not propagate to places where it shouldn't. For example, if this actor is only used because of a <code>SERVICE</code> keyword, we need to make sure that the actor still uses the <code>SERVICE</code> operation instead of the full original query. We could do this by just making sure that the service operator unsets or overrides this entry.</p>\n<hr>\n<p dir=\"auto\">Original issue:</p>\n<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"question\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2753.png\">‚ùì</g-emoji> Question </li>\n</ul>\n<hr>\n<h4 dir=\"auto\">Question:</h4>\n<p dir=\"auto\">I want to query SPARQL endpoint <code>https://data.muziekschatten.nl/sparql</code>, backed by Virtuoso, using the query underneath:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT * WHERE {\n  ?uri &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://schema.org/Person&gt;;\n    &lt;http://schema.org/name&gt; ?label.\n  FILTER(&lt;bif:contains&gt;(?label, &quot;emile&quot;))\n  BIND(&quot;no name&quot; AS ?name)\n}\nLIMIT 100\n\"><pre><span class=\"pl-k\">SELECT</span> * <span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?uri</span> <span class=\"pl-en\">&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt;</span> <span class=\"pl-en\">&lt;http://schema.org/Person&gt;</span>;\n    <span class=\"pl-en\">&lt;http://schema.org/name&gt;</span> <span class=\"pl-c1\">?label</span>.\n  <span class=\"pl-k\">FILTER</span>(&lt;bif:contains&gt;(<span class=\"pl-c1\">?label</span>, \"emile\"))\n  BIND(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>no name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">AS</span> <span class=\"pl-c1\">?name</span>)\n}\n<span class=\"pl-k\">LIMIT</span> 100</pre></div>\n<p dir=\"auto\">It's a silly query - but the crucial parts are the <code>FILTER</code> and the <code>BIND</code>. If I execute this using Comunica...</p>\n<p dir=\"auto\"><code>npx comunica-sparql sparql@https://data.muziekschatten.nl/sparql -f query.rq</code></p>\n<p dir=\"auto\">...where file <code>query.rq</code> contains the query above...then the result is:</p>\n<p dir=\"auto\"><code>[Invalid SPARQL endpoint (https://data.muziekschatten.nl/sparql) response: undefined</code></p>\n<p dir=\"auto\">My guess is that Comunica is rewriting the query, e.g. to:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT * WHERE {\n  ?uri &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://schema.org/Person&gt;;\n    &lt;http://schema.org/name&gt; ?label.\n  BIND(&quot;no name&quot; AS ?name)\n  FILTER(&lt;bif:contains&gt;(?label, &quot;emile&quot;))\n}\nLIMIT 100\n\"><pre><span class=\"pl-k\">SELECT</span> * <span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?uri</span> <span class=\"pl-en\">&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt;</span> <span class=\"pl-en\">&lt;http://schema.org/Person&gt;</span>;\n    <span class=\"pl-en\">&lt;http://schema.org/name&gt;</span> <span class=\"pl-c1\">?label</span>.\n  BIND(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>no name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">AS</span> <span class=\"pl-c1\">?name</span>)\n  <span class=\"pl-k\">FILTER</span>(&lt;bif:contains&gt;(<span class=\"pl-c1\">?label</span>, \"emile\"))\n}\n<span class=\"pl-k\">LIMIT</span> 100</pre></div>\n<p dir=\"auto\"><code>FILTER</code> is placed after <code>BIND</code>. If I execute this query via the endpoint's query editor on <code>https://data.muziekschatten.nl/sparql</code>, then Virtuoso yields the error:</p>\n<p dir=\"auto\"><code>Virtuoso 37000 Error SP031: SPARQL compiler: The group does not contain triple pattern with '$label' object before bif:contains() predicate</code>.</p>\n<p dir=\"auto\">Is it possible to influence the way that Comunica rewrites the query?</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://netwerkdigitaalerfgoed.nl/\" rel=\"nofollow\"><img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-07-28T15:44:07Z","closedAt":null},{"state":"OPEN","title":"Stream scalability issues","url":"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/76","number":76,"repository":{"name":"jsonld-streaming-parser.js","nameWithOwner":"rubensworks/jsonld-streaming-parser.js","url":"https://github.com/rubensworks/jsonld-streaming-parser.js","description":"A fast and lightweight streaming JSON-LD parser for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"This is a master issue that acts as an overview of the following issues:\r\n\r\n* #71\r\n* #65\r\n* #66\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨3808 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">This is a master issue that acts as an overview of the following issues:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"741635227\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/71/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\">#71</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"635222528\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/65/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\">#65</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"636110731\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/66/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\">#66</a></li>\n</ul>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨3808</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-07-20T11:50:24Z","closedAt":null},{"state":"CLOSED","title":"Throwing `Projection of ungrouped variable` error on valid query","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/120","number":120,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.\r\nThis query is valid, but throws an `Projection of ungrouped variable (?p)` error:\r\n\r\n```\r\nselect ?p (count(*) as ?n) {\r\n  [ ?p [] ].\r\n}\r\n```\r\n\r\nThis seems to be introduced by this PR: #108\r\n\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨272 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.<br>\nThis query is valid, but throws an <code>Projection of ungrouped variable (?p)</code> error:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\n\"><pre><code>select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\n</code></pre></div>\n<p dir=\"auto\">This seems to be introduced by this PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"666997350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/RubenVerborgh/SPARQL.js/issues/108\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/RubenVerborgh/SPARQL.js/pull/108/hovercard\" href=\"https://github.com/RubenVerborgh/SPARQL.js/pull/108\">#108</a></p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨272</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-10-29T10:13:22Z","closedAt":"2021-10-01T10:37:44Z"},{"state":"OPEN","title":"URL encoded strings are decoded in IRIs","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js/issues/39","number":39,"repository":{"name":"rdfxml-streaming-parser.js","nameWithOwner":"rdfjs/rdfxml-streaming-parser.js","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js","description":"Streaming RDF/XML parser"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"Hi, I have a rdf-xml file where an IRI contains the character sequence `&#xA;`, which is a URL encoding for newlines (`\\n`). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains `\\n`. The same can be seen for other strings such as `&gt;` and `&lt;`. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct. \r\n\r\n```javascript\r\nconst fs = require('fs');\r\nconst RdfXmlParser = require(\"rdfxml-streaming-parser\").RdfXmlParser;\r\nconst N3 = require('n3');\r\n\r\nfs.createReadStream('test.rdf')\r\n  .pipe(new RdfXmlParser())\r\n  .on('data', console.log)\r\n\r\nfs.createReadStream('test.ttl')\r\n  .pipe(new N3.StreamParser())\r\n  .on('data', console.log)\r\n```\r\n\r\ninput files: \r\n\r\n```rdf\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n         xmlns:ns0=\"b:\">\r\n\r\n  <rdf:Description rdf:about=\"a:&#xA;\">\r\n    <ns0:b rdf:resource=\"c:c\"/>\r\n  </rdf:Description>\r\n\r\n</rdf:RDF>\r\n```\r\n\r\n```turtle\r\n<a:&#xA;><b:b><c:c>.\r\n```\r\n\r\noutput:\r\n```\r\nQuad {\r\n  subject: NamedNode { value: 'a:\\n' },\r\n  predicate: NamedNode { value: 'b:b' },\r\n  object: NamedNode { value: 'c:c' },\r\n  graph: DefaultGraph { value: '' }\r\n}\r\nQuad {\r\n  subject: NamedNode { id: 'a:&#xA;' },\r\n  predicate: NamedNode { id: 'b:b' },\r\n  object: NamedNode { id: 'c:c' },\r\n  graph: DefaultGraph { id: '' }\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">Hi, I have a rdf-xml file where an IRI contains the character sequence <code>&amp;#xA;</code>, which is a URL encoding for newlines (<code>\\n</code>). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains <code>\\n</code>. The same can be seen for other strings such as <code>&amp;gt;</code> and <code>&amp;lt;</code>. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct.</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const fs = require('fs');\nconst RdfXmlParser = require(&quot;rdfxml-streaming-parser&quot;).RdfXmlParser;\nconst N3 = require('n3');\n\nfs.createReadStream('test.rdf')\n  .pipe(new RdfXmlParser())\n  .on('data', console.log)\n\nfs.createReadStream('test.ttl')\n  .pipe(new N3.StreamParser())\n  .on('data', console.log)\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">RdfXmlParser</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"rdfxml-streaming-parser\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">RdfXmlParser</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">N3</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'n3'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.rdf'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RdfXmlParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.ttl'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-c1\">N3</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">StreamParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">input files:</p>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n         xmlns:ns0=&quot;b:&quot;&gt;\n\n  &lt;rdf:Description rdf:about=&quot;a:&amp;#xA;&quot;&gt;\n    &lt;ns0:b rdf:resource=&quot;c:c&quot;/&gt;\n  &lt;/rdf:Description&gt;\n\n&lt;/rdf:RDF&gt;\n\"><pre>&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utf-8<span class=\"pl-pds\">\"</span></span> ?&gt;\n&lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">rdf</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/1999/02/22-rdf-syntax-ns#<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ns0</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b:<span class=\"pl-pds\">\"</span></span>&gt;\n\n  &lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">about</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a:<span class=\"pl-c1\">&amp;#xA;</span><span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">ns0</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">b</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">resource</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>c:c<span class=\"pl-pds\">\"</span></span>/&gt;\n  &lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span>&gt;\n\n&lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span>&gt;</pre></div>\n<div class=\"highlight highlight-source-turtle position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;.\n\"><pre><span class=\"pl-en\">&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;</span>.</pre></div>\n<p dir=\"auto\">output:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\n\"><pre><code>Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\n</code></pre></div>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-30T12:55:55Z","closedAt":null},{"state":"OPEN","title":"Parsing issue with SPARQL query on inverse paths in anonymous node","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/99","number":99,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"_Originally reported in by https://github.com/comunica/comunica/issues/677 @jaw111._\r\n\r\nThere is an odd combination of syntax that is flagged as an error.\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie a dbpedia-owl:Film ;\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\nGives the error:\r\n\r\n```\r\n# Parse error on line 21:\r\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\r\n----------------------^\r\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\r\n```\r\n\r\nWhilst removing the triple pattern for `a` works just fine:\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨272 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\"><em>Originally reported in by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"645427878\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/comunica/issues/677\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/comunica/issues/677/hovercard\" href=\"https://github.com/comunica/comunica/issues/677\">comunica/comunica#677</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jaw111/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jaw111\">@jaw111</a>.</em></p>\n<p dir=\"auto\">There is an odd combination of syntax that is flagged as an error.</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie a dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\n\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span> <span class=\"pl-k\">a</span> dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<p dir=\"auto\">Gives the error:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Parse error on line 21:\n...ad Pitt&quot;@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\n\"><pre><code># Parse error on line 21:\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\n</code></pre></div>\n<p dir=\"auto\">Whilst removing the triple pattern for <code>a</code> works just fine:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\n\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span>\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨272</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-25T11:32:44Z","closedAt":null},{"state":"OPEN","title":"Allow HTTP timeout configuration","url":"https://github.com/comunica/comunica/issues/70","number":70,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"We should allow users to pass an HTTP timeout value via the context (`httpTimeout`).\r\n\r\nThis could be implemented using our own `setTimeout` and the fetch `AbortController`: https://github.com/bitinn/node-fetch/issues/95\r\n\r\nWe should keep in mind here that we should clear our own timeout once the request completes (response object is available).\r\n\r\nAdditionally, we need an extra context option (boolean:  `httpTimeoutOnBody`) to make it so that the timeout not only applies to the time until response starts coming in, but also to the time until the response body is fully available. The latter could take longer, or potentially be infinite for e.g. continuous data streams. This should also take into account that response bodies can be cancelled from within Comunica.\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\">](https://netwerkdigitaalerfgoed.nl/) |\r\n| ‚Ç¨1088 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">We should allow users to pass an HTTP timeout value via the context (<code>httpTimeout</code>).</p>\n<p dir=\"auto\">This could be implemented using our own <code>setTimeout</code> and the fetch <code>AbortController</code>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"145106116\" data-permission-text=\"Title is private\" data-url=\"https://github.com/node-fetch/node-fetch/issues/95\" data-hovercard-type=\"issue\" data-hovercard-url=\"/node-fetch/node-fetch/issues/95/hovercard\" href=\"https://github.com/node-fetch/node-fetch/issues/95\">node-fetch/node-fetch#95</a></p>\n<p dir=\"auto\">We should keep in mind here that we should clear our own timeout once the request completes (response object is available).</p>\n<p dir=\"auto\">Additionally, we need an extra context option (boolean:  <code>httpTimeoutOnBody</code>) to make it so that the timeout not only applies to the time until response starts coming in, but also to the time until the response body is fully available. The latter could take longer, or potentially be infinite for e.g. continuous data streams. This should also take into account that response bodies can be cancelled from within Comunica.</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://netwerkdigitaalerfgoed.nl/\" rel=\"nofollow\"><img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨1088</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2018-01-15T14:21:31Z","closedAt":null}]}}}},"__N_SSG":true}