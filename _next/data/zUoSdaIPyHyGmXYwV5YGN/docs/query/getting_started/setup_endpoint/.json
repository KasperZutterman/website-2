{"pageProps":{"frontmatter":{"title":"Setting up a SPARQL endpoint","description":"Allow querying over HTTP via the SPARQL protocol"},"body":"\nThe [SPARQL protocol](https://www.w3.org/TR/sparql11-protocol/) allows clients to send SPARQL queries to Web servers over HTTP,\nand query results to be sent back to the client. \nComunica SPARQL can be used to set up a **SPARQL endpoint** on top of any number of sources you want.\n\n## 1. Installation\n\nSince Comunica runs on Node.js, make sure you have [Node.js installed](https://nodejs.org/en/) on your machine.\n\nNext, we can install Comunica SPARQL on our machine:\n```bash\n$ npm install -g @comunica/actor-init-sparql\n```\n\n## 2. SPARQL endpoint over one source\n\nAfter installing Comunica SPARQL, you will be given access to several commands including `comunica-sparql-http`,\nwhich allows you to start a SPARQL endpoint from the command line.\n\nThis command requires one or more URLs to be provided as **sources** to query over.\n\nFor example, the following command starts a SPARQL endpoint over [DBpedia](https://fragments.dbpedia.org/2016-04/en):\n```bash\n$ comunica-sparql-http https://fragments.dbpedia.org/2016-04/en\n```\n\n<div class=\"note\">\nGiven a URL, Comunica will automatically detect the <a href=\"/docs/query/advanced/source_types/\">type of source</a> and handle it accordingly.\n</div>\n\nBy default, the endpoint will be exposed on port 3000.\nYour endpoint will now be live on `http://localhost:3000/sparql`.\nAny client that understands the SPARQL protocol will now be able to send queries to this URL,\nsuch as [`fetch-sparql-endpoint`](https://github.com/rubensworks/fetch-sparql-endpoint.js/), or even Comunica itself.\n\n<div class=\"note\">\nThe URL <code>http://localhost:3000/</code> will automatically redirect to <code>http://localhost:3000/sparql</code>.\n</div>\n\nYou can easily test query execution over your endpoint using a tool such as `curl`.\nThe SPARQL protocol allows sending queries via HTTP GET by passing a URL-encoded SPARQL query via the `?query=` parameter:\n```bash\n$ curl -v \"http://localhost:3000/sparql?query=CONSTRUCT%20WHERE%20%7B%3Fs%20%3Fp%20%3Fo.%7DLIMIT%20100\"\n```\n\n## 3. SPARQL endpoint over multiple sources\n\nOne key feature of Comunica is its ability to query over **multiple sources**.\nFor this, you can just supply any number of URLs as arguments.\n\n```bash\n$ comunica-sparql-http https://fragments.dbpedia.org/2016-04/en \\\n    https://www.rubensworks.net/ \\\n    https://ruben.verborgh.org/profile/\n```\n\n## 4. Changing the port\n\nUsing the `-p` option, the port can be changed:\n```bash\n$ comunica-sparql-http https://fragments.dbpedia.org/2016-04/en \\\n  -p 3001\n```\n\n## 5. Learn more\n\nThis guide only discussed the basic functionality of `comunica-sparql-http`.\nYou can learn more options by invoking the _help_ command:\n```text\n$ comunica-sparql-http --help\n\nUsage:\n  comunica-sparql-http http://fragments.dbpedia.org/2015/en\n  comunica-sparql-http http://fragments.dbpedia.org/2015/en hypermedia@http://fragments.dbpedia.org/2016-04/en\n  comunica-sparql-http -c context.json\n  comunica-sparql-http -c \"{ \\\"sources\\\": [{ \\\"type\\\": \\\"hypermedia\\\", \\\"value\\\" : \\\"http://fragments.dbpedia.org/2015/en\\\" }]}\"\n\nOptions:\n  -c            Context should be a JSON object or the path to such a JSON file.\n  -p            The HTTP port to run on (default: 3000)\n  -t            The query execution timeout in seconds (default: 60)\n  -b            base IRI for the query (e.g., http://example.org/)\n  -l            Sets the log level (e.g., debug, info, warn, ... defaults to warn)\n  -i            A flag that enables cache invalidation before each query execution.\n  --lenient     if failing requests and parsing errors should be logged instead of causing a hard crash\n  --help        print this help message\n  --version     prints version information\n```\n","excerpt":"","path":"/docs/query/getting_started/setup_endpoint","paths":["/about/","/ask/","/blog/","/cite/","/contribute/","/docs/","/docs/query/","/docs/query/getting_started/","/docs/query/getting_started/query_cli/","/docs/query/getting_started/query_cli_file/","/docs/query/getting_started/query_app/","/docs/query/getting_started/query_browser_app/","/docs/query/getting_started/query_docker/","/docs/query/getting_started/setup_endpoint/","/docs/query/getting_started/setup_web_client/","/docs/query/getting_started/query_dev_version/","/docs/query/usage/","/docs/query/faq/","/docs/query/advanced/","/docs/query/advanced/basic_auth/","/docs/query/advanced/caching/","/docs/query/advanced/context/","/docs/query/advanced/federation/","/docs/query/advanced/graphql_ld/","/docs/query/advanced/hdt/","/docs/query/advanced/logging/","/docs/query/advanced/memento/","/docs/query/advanced/proxying/","/docs/query/advanced/rdfjs/","/docs/query/advanced/rdfjs_querying/","/docs/query/advanced/result_formats/","/docs/query/advanced/source_types/","/docs/query/advanced/sparql_query_types/","/docs/query/advanced/specifications/","/docs/modify/","/docs/modify/getting_started/","/docs/modify/getting_started/custom_config/","/docs/modify/extensions/","/docs/modify/faq/","/docs/modify/advanced/","/docs/modify/advanced/browser_builds/","/roadmap/"],"mattersData":{"/about/":{"title":"About","description":"Learn more about Comunica."},"/ask/":{"title":"Ask","description":"Ask questions about Comunica."},"/blog/":{"title":"Blog","description":"Blog posts, containing announcement or other of news.","blog_index":true},"/cite/":{"title":"Cite","description":"Reference Comunica in a scientific publication."},"/contribute/":{"title":"Contribute","description":"Contribute to the development of Comunica."},"/docs/":{"title":"Documentation","description":"Overview of all Comunica documentation.","index":true},"/docs/query/":{"title":"Query with Comunica","description":"Learn how to execute queries in different environments. Such as live in the browser, in JavaScript applications, or the CLI.","index":true},"/docs/query/getting_started/":{"title":"Getting started with querying","description":"Basic guides on how to easily get started with querying.","index":true},"/docs/query/getting_started/query_cli/":{"title":"Querying from the command line","description":"Execute SPARQL queries directly from the command line."},"/docs/query/getting_started/query_cli_file/":{"title":"Querying local files from the command line","description":"Execute SPARQL queries over local RDF files directly from the command line."},"/docs/query/getting_started/query_app/":{"title":"Querying in a JavaScript app","description":"Execute SPARQL queries from within your application using the JavaScript API."},"/docs/query/getting_started/query_browser_app/":{"title":"Querying in a JavaScript browser app","description":"Execute SPARQL queries from within your client-side browser application using the JavaScript API."},"/docs/query/getting_started/query_docker/":{"title":"Querying from a Docker container","description":"Execute SPARQL queries within a Docker container."},"/docs/query/getting_started/setup_endpoint/":{"title":"Setting up a SPARQL endpoint","description":"Allow querying over HTTP via the SPARQL protocol"},"/docs/query/getting_started/setup_web_client/":{"title":"Setting up a Web client","description":"Set up a user-friendly static Web page where SPARQL queries can be executed client-side"},"/docs/query/getting_started/query_dev_version/":{"title":"Query using the latest development version","description":"If you want to make use of the latest changes that are not released yet"},"/docs/query/usage/":{"title":"Usage showcase","description":"Examples of where Comunica is used."},"/docs/query/faq/":{"title":"Querying FAQ","description":"Frequently asked questions about using Comunica."},"/docs/query/advanced/":{"title":"Advanced querying","description":"Advanced guides on how to get the most out of Comunica.","index":true},"/docs/query/advanced/basic_auth/":{"title":"HTTP Basic Authentication","description":"Send authenticated HTTP requests by including username and password."},"/docs/query/advanced/caching/":{"title":"Caching","description":"When remote sources are requested, caching allows them to be reused in the future."},"/docs/query/advanced/context/":{"title":"Passing a context","description":"A context can be passed to a query engine to tweak its runtime settings."},"/docs/query/advanced/federation/":{"title":"Federated Querying","description":"Query over the union of data within any number of sources"},"/docs/query/advanced/graphql_ld/":{"title":"GraphQL-LD","description":"Using the power of JSON-LD contexts, GraphQL queries can be executed by Comunica"},"/docs/query/advanced/hdt/":{"title":"HDT","description":"HDT offers highly compressed immutable RDF storage."},"/docs/query/advanced/logging/":{"title":"Logging","description":"Loggers can be set to different logging levels to inspect what Comunica is doing behind the scenes."},"/docs/query/advanced/memento/":{"title":"Memento","description":"Using the Memento protocol, time travel queries can be executed."},"/docs/query/advanced/proxying/":{"title":"HTTP Proxy","description":"All HTTP requests can optionally go through a proxy."},"/docs/query/advanced/rdfjs/":{"title":"RDF/JS","description":"To achieve maximum interoperability between different JavaScript libraries, Comunica builds on top of the RDF/JS specifications."},"/docs/query/advanced/rdfjs_querying/":{"title":"Querying over RDF/JS sources","description":"If the built-in source types are not sufficient, you can pass a custom JavaScript object implementing a specific interface."},"/docs/query/advanced/result_formats/":{"title":"Result formats","description":"Query results can be serialized in different formats."},"/docs/query/advanced/source_types/":{"title":"Source types","description":"Comunica detects and handles different types of sources."},"/docs/query/advanced/sparql_query_types/":{"title":"SPARQL query types","description":"Different SPARQL query types are possible, such as SELECT, CONSTRUCT, ASK, ..."},"/docs/query/advanced/specifications/":{"title":"Supported specifications","description":"Comunica supports several RDF-related specifications"},"/docs/modify/":{"title":"Modify Comunica","description":"Learn how to configure your own Comunica engine, or extend Comunica by implementing new components.","index":true},"/docs/modify/getting_started/":{"title":"Getting started with modification","description":"Basic guides on how to easily get started with Comunica modification.","index":true,"wip":true},"/docs/modify/getting_started/custom_config/":{"title":"Creating a custom configuration","description":"Create a custom configuration of Comunica modules with specific features.","wip":true},"/docs/modify/extensions/":{"title":"Extensions","description":"Existing extensions of Comunica.","wip":true},"/docs/modify/faq/":{"title":"Modify FAQ","description":"Frequently asked question about Comunica modification.","wip":true},"/docs/modify/advanced/":{"title":"Advanced modification","description":"Advanced guides on how to get the most out of Comunica modification.","index":true,"wip":true},"/docs/modify/advanced/browser_builds/":{"title":"Browser builds","description":"All modules in Comunica can be built for the browser","wip":true},"/roadmap/":{"title":"Roadmap","description":"The long-term goals of Comunica"}}},"__N_SSG":true}