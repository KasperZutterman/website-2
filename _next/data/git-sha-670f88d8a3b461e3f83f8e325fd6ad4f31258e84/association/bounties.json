{"pageProps":{"githubData":{"data":{"search":{"nodes":[{"state":"CLOSED","title":"ORDER BY is not implemented completely","url":"https://github.com/comunica/comunica/issues/892","number":892,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Thomas Tanon","avatarUrl":"https://avatars.githubusercontent.com/u/458123?u=bf1d77be86bf27f242441a992982e19e54cf51f9&v=4","url":"https://github.com/Tpt"}]},"body":"_This issue has been modified by @rubensworks to describe the intended solution_\r\n\r\nApparently, [we only support ordering by literal values](https://github.com/comunica/sparqlee/blob/7c1180638154c72d3c3292e48d000ed9770796f0/lib/util/Ordering.ts#L8), and a total ordering as mentioned in the [SPARQL spec](https://www.w3.org/TR/sparql11-query/#modOrderBy) has not been implemented yet.\r\n\r\nThe goal of this issue is to properly implement total ordering in sparqlee (with the necessary unit tests), and optionally some integration tests here in Comunica.\r\n\r\n-----\r\n\r\n#### Issue type:\r\n\r\n- :bug: Bug <!--Don't change this issue type!-->\r\n\r\n____\r\n#### Description:\r\n\r\nRunning queries with ORDER BY on @comunica/actor-init-sparql-file, IRIs are not sorted.\r\n\r\nRelevant paragraph in the SPARQL 1.1 Spec (https://www.w3.org/TR/sparql11-query/#modOrderBy):\r\n\r\n> The \"<\" operator (see the Operator Mapping and 17.3.1 Operator Extensibility) defines the relative order of pairs of numerics, simple literals, xsd:strings, xsd:booleans and xsd:dateTimes. Pairs of IRIs are ordered by comparing them as simple literals.\r\n\r\nExample (using VALUES for self-containment, but I've found the same issue with actual input sources):\r\n```javascript\r\nimport { newEngine } from '@comunica/actor-init-sparql-file'\r\n\r\nconst query = `\r\n  PREFIX ex: <http://example.org/>\r\n  SELECT ?x\r\n  WHERE {\r\n    VALUES ?x {ex:b ex:a ex:c}\r\n  } ORDER BY ?x`;\r\n\r\nconst engine = newEngine();\r\nconst resPromise = engine.query(query);\r\n\r\n// show the results\r\nresPromise\r\n  .then((result) => result.bindings())\r\n  .then((ba) => ba.map((b) => Object.fromEntries(b.entries())))\r\n  .then(console.log);\r\n\r\n// expected output:\r\n//\r\n// [\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }\r\n//   },\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }\r\n//   },\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }\r\n//   }\r\n// ]\r\n\r\n// actual output:\r\n//\r\n// [\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }\r\n//   },\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }\r\n//   },\r\n//   {\r\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }\r\n//   }\r\n// ]\r\n```\r\n\r\n____\r\n#### Environment:\r\n\r\n<!--Output of the `comunica-sparql -v` command.-->\r\n<!--If running in a development environment, this must be the output of `node ./packages/actor-init-sparql/bin/query.js -v`-->\r\nResult of running from my package `node node_modules/@comunica/actor-init-sparql/bin/query.js -v`\r\n\r\n| software            | version\r\n| ------------------- | -------\r\n| Comunica Init Actor | 1.22.3\r\n| node                | v14.18.1\r\n| npm                 | 6.14.15\r\n| yarn                | 1.22.17\r\n| Operating System    | linux (Linux 5.4.0-48-generic)\r\n\r\n#### Crash log:\r\n\r\n<!--Only required for crashes.-->\r\n<!--Don't paste contents here directly, but use something like http://pastebin.com/-->\r\n\r\nNot applicable.\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Comunica Association\" src=\"https://comunica.dev/img/comunica_red.svg\" height=\"50\">](https://comunica.dev/association/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.\r\n","bodyHTML":"<p dir=\"auto\"><em>This issue has been modified by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rubensworks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rubensworks\">@rubensworks</a> to describe the intended solution</em></p>\n<p dir=\"auto\">Apparently, <a href=\"https://github.com/comunica/sparqlee/blob/7c1180638154c72d3c3292e48d000ed9770796f0/lib/util/Ordering.ts#L8\">we only support ordering by literal values</a>, and a total ordering as mentioned in the <a href=\"https://www.w3.org/TR/sparql11-query/#modOrderBy\" rel=\"nofollow\">SPARQL spec</a> has not been implemented yet.</p>\n<p dir=\"auto\">The goal of this issue is to properly implement total ordering in sparqlee (with the necessary unit tests), and optionally some integration tests here in Comunica.</p>\n<hr>\n<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png\">üêõ</g-emoji> Bug </li>\n</ul>\n<hr>\n<h4 dir=\"auto\">Description:</h4>\n<p dir=\"auto\">Running queries with ORDER BY on @comunica/actor-init-sparql-file, IRIs are not sorted.</p>\n<p dir=\"auto\">Relevant paragraph in the SPARQL 1.1 Spec (<a href=\"https://www.w3.org/TR/sparql11-query/#modOrderBy\" rel=\"nofollow\">https://www.w3.org/TR/sparql11-query/#modOrderBy</a>):</p>\n<blockquote>\n<p dir=\"auto\">The \"&lt;\" operator (see the Operator Mapping and 17.3.1 Operator Extensibility) defines the relative order of pairs of numerics, simple literals, xsd:strings, xsd:booleans and xsd:dateTimes. Pairs of IRIs are ordered by comparing them as simple literals.</p>\n</blockquote>\n<p dir=\"auto\">Example (using VALUES for self-containment, but I've found the same issue with actual input sources):</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import { newEngine } from '@comunica/actor-init-sparql-file'\n\nconst query = `\n  PREFIX ex: &lt;http://example.org/&gt;\n  SELECT ?x\n  WHERE {\n    VALUES ?x {ex:b ex:a ex:c}\n  } ORDER BY ?x`;\n\nconst engine = newEngine();\nconst resPromise = engine.query(query);\n\n// show the results\nresPromise\n  .then((result) =&gt; result.bindings())\n  .then((ba) =&gt; ba.map((b) =&gt; Object.fromEntries(b.entries())))\n  .then(console.log);\n\n// expected output:\n//\n// [\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }\n//   },\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }\n//   },\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }\n//   }\n// ]\n\n// actual output:\n//\n// [\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }\n//   },\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }\n//   },\n//   {\n//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }\n//   }\n// ]\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">newEngine</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@comunica/actor-init-sparql-file'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`</span>\n<span class=\"pl-s\">  PREFIX ex: &lt;http://example.org/&gt;</span>\n<span class=\"pl-s\">  SELECT ?x</span>\n<span class=\"pl-s\">  WHERE {</span>\n<span class=\"pl-s\">    VALUES ?x {ex:b ex:a ex:c}</span>\n<span class=\"pl-s\">  } ORDER BY ?x`</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">engine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">newEngine</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">resPromise</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">engine</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">query</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">query</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// show the results</span>\n<span class=\"pl-s1\">resPromise</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">result</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">result</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">bindings</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">ba</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">ba</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">fromEntries</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">entries</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// expected output:</span>\n<span class=\"pl-c\">//</span>\n<span class=\"pl-c\">// [</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }</span>\n<span class=\"pl-c\">//   },</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }</span>\n<span class=\"pl-c\">//   },</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }</span>\n<span class=\"pl-c\">//   }</span>\n<span class=\"pl-c\">// ]</span>\n\n<span class=\"pl-c\">// actual output:</span>\n<span class=\"pl-c\">//</span>\n<span class=\"pl-c\">// [</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/b' }</span>\n<span class=\"pl-c\">//   },</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/a' }</span>\n<span class=\"pl-c\">//   },</span>\n<span class=\"pl-c\">//   {</span>\n<span class=\"pl-c\">//     '?x': NamedNode { termType: 'NamedNode', value: 'http://example.org/c' }</span>\n<span class=\"pl-c\">//   }</span>\n<span class=\"pl-c\">// ]</span></pre></div>\n<hr>\n<h4 dir=\"auto\">Environment:</h4>\n\n\n<p dir=\"auto\">Result of running from my package <code class=\"notranslate\">node node_modules/@comunica/actor-init-sparql/bin/query.js -v</code></p>\n<table role=\"table\">\n<thead>\n<tr>\n<th>software</th>\n<th>version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Comunica Init Actor</td>\n<td>1.22.3</td>\n</tr>\n<tr>\n<td>node</td>\n<td>v14.18.1</td>\n</tr>\n<tr>\n<td>npm</td>\n<td>6.14.15</td>\n</tr>\n<tr>\n<td>yarn</td>\n<td>1.22.17</td>\n</tr>\n<tr>\n<td>Operating System</td>\n<td>linux (Linux 5.4.0-48-generic)</td>\n</tr>\n</tbody>\n</table>\n<h4 dir=\"auto\">Crash log:</h4>\n\n\n<p dir=\"auto\">Not applicable.</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://comunica.dev/association/\" rel=\"nofollow\"><img alt=\"Comunica Association\" src=\"https://camo.githubusercontent.com/b4c6d02f83ec624d60d45d9d5ab87ca235d9a10f4ce7b84fdb73dda007d94b64/68747470733a2f2f636f6d756e6963612e6465762f696d672f636f6d756e6963615f7265642e737667\" height=\"50\" data-canonical-src=\"https://comunica.dev/img/comunica_red.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-11-21T17:42:37Z","closedAt":"2022-05-12T07:07:51Z"},{"state":"CLOSED","title":"Send original SPARQL query string to endpoints","url":"https://github.com/comunica/comunica/issues/844","number":844,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":null,"avatarUrl":"https://avatars.githubusercontent.com/u/6739756?u=5e5d6c1d719da3a53c090306150a205d7f0c7370&v=4","url":"https://github.com/jasmineleonard"}]},"body":"_This issue has been modified by @rubensworks to describe the intended solution_\r\n\r\nThe problem is that we always parse the incoming query, and serialize it again when we send it to a SPARQL endpoint. Since this parsing-serializing process sometimes results in slightly different queries, this may cause issues for certain use cases. To solve this, we need to keep track of the original query string, and use that one in the case of querying a SPARQL endpoint.\r\n\r\nIn actor-init-sparql, we need to add the original query string into the context.\r\nIn `actor-query-operation-sparql-endpoint`, we need to check this context entry, and use that one if it exists.\r\n\r\nThe only difficulty here is that we have to make sure that this context entry does not propagate to places where it shouldn't. For example, if this actor is only used because of a `SERVICE` keyword, we need to make sure that the actor still uses the `SERVICE` operation instead of the full original query. We could do this by just making sure that the service operator unsets or overrides this entry.\r\n\r\n-----\r\n\r\nOriginal issue:\r\n\r\n\r\n#### Issue type:\r\n\r\n- :question: Question <!--Don't change this issue type!-->\r\n\r\n____\r\n#### Question:\r\n\r\nI want to query SPARQL endpoint `https://data.muziekschatten.nl/sparql`, backed by Virtuoso, using the query underneath:\r\n\r\n```sparql\r\nSELECT * WHERE {\r\n  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Person>;\r\n    <http://schema.org/name> ?label.\r\n  FILTER(<bif:contains>(?label, \"emile\"))\r\n  BIND(\"no name\" AS ?name)\r\n}\r\nLIMIT 100\r\n```\r\n\r\nIt's a silly query - but the crucial parts are the `FILTER` and the `BIND`. If I execute this using Comunica...\r\n\r\n`npx comunica-sparql sparql@https://data.muziekschatten.nl/sparql -f query.rq`\r\n\r\n...where file `query.rq` contains the query above...then the result is:\r\n\r\n`[Invalid SPARQL endpoint (https://data.muziekschatten.nl/sparql) response: undefined`\r\n\r\nMy guess is that Comunica is rewriting the query, e.g. to:\r\n\r\n```sparql\r\nSELECT * WHERE {\r\n  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Person>;\r\n    <http://schema.org/name> ?label.\r\n  BIND(\"no name\" AS ?name)\r\n  FILTER(<bif:contains>(?label, \"emile\"))\r\n}\r\nLIMIT 100\r\n```\r\n\r\n`FILTER` is placed after `BIND`. If I execute this query via the endpoint's query editor on `https://data.muziekschatten.nl/sparql`, then Virtuoso yields the error:\r\n\r\n`Virtuoso 37000 Error SP031: SPARQL compiler: The group does not contain triple pattern with '$label' object before bif:contains() predicate`.\r\n\r\nIs it possible to influence the way that Comunica rewrites the query?\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\">](https://netwerkdigitaalerfgoed.nl/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\"><em>This issue has been modified by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rubensworks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rubensworks\">@rubensworks</a> to describe the intended solution</em></p>\n<p dir=\"auto\">The problem is that we always parse the incoming query, and serialize it again when we send it to a SPARQL endpoint. Since this parsing-serializing process sometimes results in slightly different queries, this may cause issues for certain use cases. To solve this, we need to keep track of the original query string, and use that one in the case of querying a SPARQL endpoint.</p>\n<p dir=\"auto\">In actor-init-sparql, we need to add the original query string into the context.<br>\nIn <code class=\"notranslate\">actor-query-operation-sparql-endpoint</code>, we need to check this context entry, and use that one if it exists.</p>\n<p dir=\"auto\">The only difficulty here is that we have to make sure that this context entry does not propagate to places where it shouldn't. For example, if this actor is only used because of a <code class=\"notranslate\">SERVICE</code> keyword, we need to make sure that the actor still uses the <code class=\"notranslate\">SERVICE</code> operation instead of the full original query. We could do this by just making sure that the service operator unsets or overrides this entry.</p>\n<hr>\n<p dir=\"auto\">Original issue:</p>\n<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"question\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2753.png\">‚ùì</g-emoji> Question </li>\n</ul>\n<hr>\n<h4 dir=\"auto\">Question:</h4>\n<p dir=\"auto\">I want to query SPARQL endpoint <code class=\"notranslate\">https://data.muziekschatten.nl/sparql</code>, backed by Virtuoso, using the query underneath:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT * WHERE {\n  ?uri &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://schema.org/Person&gt;;\n    &lt;http://schema.org/name&gt; ?label.\n  FILTER(&lt;bif:contains&gt;(?label, &quot;emile&quot;))\n  BIND(&quot;no name&quot; AS ?name)\n}\nLIMIT 100\"><pre><span class=\"pl-k\">SELECT</span> * <span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?uri</span> <span class=\"pl-en\">&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt;</span> <span class=\"pl-en\">&lt;http://schema.org/Person&gt;</span>;\n    <span class=\"pl-en\">&lt;http://schema.org/name&gt;</span> <span class=\"pl-c1\">?label</span>.\n  <span class=\"pl-k\">FILTER</span>(&lt;bif:contains&gt;(<span class=\"pl-c1\">?label</span>, \"emile\"))\n  BIND(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>no name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">AS</span> <span class=\"pl-c1\">?name</span>)\n}\n<span class=\"pl-k\">LIMIT</span> 100</pre></div>\n<p dir=\"auto\">It's a silly query - but the crucial parts are the <code class=\"notranslate\">FILTER</code> and the <code class=\"notranslate\">BIND</code>. If I execute this using Comunica...</p>\n<p dir=\"auto\"><code class=\"notranslate\">npx comunica-sparql sparql@https://data.muziekschatten.nl/sparql -f query.rq</code></p>\n<p dir=\"auto\">...where file <code class=\"notranslate\">query.rq</code> contains the query above...then the result is:</p>\n<p dir=\"auto\"><code class=\"notranslate\">[Invalid SPARQL endpoint (https://data.muziekschatten.nl/sparql) response: undefined</code></p>\n<p dir=\"auto\">My guess is that Comunica is rewriting the query, e.g. to:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT * WHERE {\n  ?uri &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://schema.org/Person&gt;;\n    &lt;http://schema.org/name&gt; ?label.\n  BIND(&quot;no name&quot; AS ?name)\n  FILTER(&lt;bif:contains&gt;(?label, &quot;emile&quot;))\n}\nLIMIT 100\"><pre><span class=\"pl-k\">SELECT</span> * <span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?uri</span> <span class=\"pl-en\">&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt;</span> <span class=\"pl-en\">&lt;http://schema.org/Person&gt;</span>;\n    <span class=\"pl-en\">&lt;http://schema.org/name&gt;</span> <span class=\"pl-c1\">?label</span>.\n  BIND(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>no name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">AS</span> <span class=\"pl-c1\">?name</span>)\n  <span class=\"pl-k\">FILTER</span>(&lt;bif:contains&gt;(<span class=\"pl-c1\">?label</span>, \"emile\"))\n}\n<span class=\"pl-k\">LIMIT</span> 100</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">FILTER</code> is placed after <code class=\"notranslate\">BIND</code>. If I execute this query via the endpoint's query editor on <code class=\"notranslate\">https://data.muziekschatten.nl/sparql</code>, then Virtuoso yields the error:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Virtuoso 37000 Error SP031: SPARQL compiler: The group does not contain triple pattern with '$label' object before bif:contains() predicate</code>.</p>\n<p dir=\"auto\">Is it possible to influence the way that Comunica rewrites the query?</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://netwerkdigitaalerfgoed.nl/\" rel=\"nofollow\"><img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-07-28T15:44:07Z","closedAt":"2021-11-26T15:26:55Z"},{"state":"OPEN","title":"Stream scalability issues","url":"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/76","number":76,"repository":{"name":"jsonld-streaming-parser.js","nameWithOwner":"rubensworks/jsonld-streaming-parser.js","url":"https://github.com/rubensworks/jsonld-streaming-parser.js","description":"A fast and lightweight streaming JSON-LD parser for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"This is a master issue that acts as an overview of the following issues:\r\n\r\n* #71\r\n* #65\r\n* #66\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨3808 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">This is a master issue that acts as an overview of the following issues:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"741635227\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/71/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\">#71</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"635222528\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/65/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\">#65</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"636110731\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/66/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\">#66</a></li>\n</ul>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨3808</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-07-20T11:50:24Z","closedAt":null},{"state":"OPEN","title":"Ensure backpressure is maintained in streams","url":"https://github.com/comunica/comunica/issues/759","number":759,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"#### Issue type:\r\n\r\n- :bug: Bug <!--Don't change this issue type!-->\r\n\r\n____\r\n#### Description:\r\n\r\nThere seem to be a couple of places where we are not adhering to Node's backpressure conventions with regards to streams.\r\n\r\nConcretely, we seem to be creating new streams (such as `Readable`, `PassThrough` and `Transform`), and `push`-ing into them (via a `'data'` handler on another stream). Node handles backpressuring via the return value of `push`, which we are ignoring in this manner.\r\n\r\nA better solution would be to simply `pipe` instead of calling `push` on each data element.\r\n\r\nRelated to https://github.com/rubensworks/rdf-parse.js/commit/269c757935c54b388e1bde076dc29c2afc2e8e7b\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Comunica Association\" src=\"https://comunica.dev/img/comunica_red.svg\" height=\"50\">](https://comunica.dev/association/) |\r\n| ‚Ç¨1088 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.\r\n","bodyHTML":"<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png\">üêõ</g-emoji> Bug </li>\n</ul>\n<hr>\n<h4 dir=\"auto\">Description:</h4>\n<p dir=\"auto\">There seem to be a couple of places where we are not adhering to Node's backpressure conventions with regards to streams.</p>\n<p dir=\"auto\">Concretely, we seem to be creating new streams (such as <code class=\"notranslate\">Readable</code>, <code class=\"notranslate\">PassThrough</code> and <code class=\"notranslate\">Transform</code>), and <code class=\"notranslate\">push</code>-ing into them (via a <code class=\"notranslate\">'data'</code> handler on another stream). Node handles backpressuring via the return value of <code class=\"notranslate\">push</code>, which we are ignoring in this manner.</p>\n<p dir=\"auto\">A better solution would be to simply <code class=\"notranslate\">pipe</code> instead of calling <code class=\"notranslate\">push</code> on each data element.</p>\n<p dir=\"auto\">Related to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/rubensworks/rdf-parse.js/commit/269c757935c54b388e1bde076dc29c2afc2e8e7b/hovercard\" href=\"https://github.com/rubensworks/rdf-parse.js/commit/269c757935c54b388e1bde076dc29c2afc2e8e7b\">rubensworks/rdf-parse.js@<tt>269c757</tt></a></p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://comunica.dev/association/\" rel=\"nofollow\"><img alt=\"Comunica Association\" src=\"https://camo.githubusercontent.com/b4c6d02f83ec624d60d45d9d5ab87ca235d9a10f4ce7b84fdb73dda007d94b64/68747470733a2f2f636f6d756e6963612e6465762f696d672f636f6d756e6963615f7265642e737667\" height=\"50\" data-canonical-src=\"https://comunica.dev/img/comunica_red.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨1088</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-11-12T14:10:28Z","closedAt":null},{"state":"CLOSED","title":"Throwing `Projection of ungrouped variable` error on valid query","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/120","number":120,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.\r\nThis query is valid, but throws an `Projection of ungrouped variable (?p)` error:\r\n\r\n```\r\nselect ?p (count(*) as ?n) {\r\n  [ ?p [] ].\r\n}\r\n```\r\n\r\nThis seems to be introduced by this PR: #108\r\n\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨272 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.<br>\nThis query is valid, but throws an <code class=\"notranslate\">Projection of ungrouped variable (?p)</code> error:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\n</code></pre></div>\n<p dir=\"auto\">This seems to be introduced by this PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"666997350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/RubenVerborgh/SPARQL.js/issues/108\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/RubenVerborgh/SPARQL.js/pull/108/hovercard\" href=\"https://github.com/RubenVerborgh/SPARQL.js/pull/108\">#108</a></p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨272</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-10-29T10:13:22Z","closedAt":"2021-10-01T10:37:44Z"},{"state":"OPEN","title":"URL encoded strings are decoded in IRIs","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js/issues/39","number":39,"repository":{"name":"rdfxml-streaming-parser.js","nameWithOwner":"rdfjs/rdfxml-streaming-parser.js","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js","description":"Streaming RDF/XML parser"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"Hi, I have a rdf-xml file where an IRI contains the character sequence `&#xA;`, which is a URL encoding for newlines (`\\n`). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains `\\n`. The same can be seen for other strings such as `&gt;` and `&lt;`. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct. \r\n\r\n```javascript\r\nconst fs = require('fs');\r\nconst RdfXmlParser = require(\"rdfxml-streaming-parser\").RdfXmlParser;\r\nconst N3 = require('n3');\r\n\r\nfs.createReadStream('test.rdf')\r\n  .pipe(new RdfXmlParser())\r\n  .on('data', console.log)\r\n\r\nfs.createReadStream('test.ttl')\r\n  .pipe(new N3.StreamParser())\r\n  .on('data', console.log)\r\n```\r\n\r\ninput files: \r\n\r\n```rdf\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n         xmlns:ns0=\"b:\">\r\n\r\n  <rdf:Description rdf:about=\"a:&#xA;\">\r\n    <ns0:b rdf:resource=\"c:c\"/>\r\n  </rdf:Description>\r\n\r\n</rdf:RDF>\r\n```\r\n\r\n```turtle\r\n<a:&#xA;><b:b><c:c>.\r\n```\r\n\r\noutput:\r\n```\r\nQuad {\r\n  subject: NamedNode { value: 'a:\\n' },\r\n  predicate: NamedNode { value: 'b:b' },\r\n  object: NamedNode { value: 'c:c' },\r\n  graph: DefaultGraph { value: '' }\r\n}\r\nQuad {\r\n  subject: NamedNode { id: 'a:&#xA;' },\r\n  predicate: NamedNode { id: 'b:b' },\r\n  object: NamedNode { id: 'c:c' },\r\n  graph: DefaultGraph { id: '' }\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">Hi, I have a rdf-xml file where an IRI contains the character sequence <code class=\"notranslate\">&amp;#xA;</code>, which is a URL encoding for newlines (<code class=\"notranslate\">\\n</code>). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains <code class=\"notranslate\">\\n</code>. The same can be seen for other strings such as <code class=\"notranslate\">&amp;gt;</code> and <code class=\"notranslate\">&amp;lt;</code>. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct.</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const fs = require('fs');\nconst RdfXmlParser = require(&quot;rdfxml-streaming-parser&quot;).RdfXmlParser;\nconst N3 = require('n3');\n\nfs.createReadStream('test.rdf')\n  .pipe(new RdfXmlParser())\n  .on('data', console.log)\n\nfs.createReadStream('test.ttl')\n  .pipe(new N3.StreamParser())\n  .on('data', console.log)\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">RdfXmlParser</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"rdfxml-streaming-parser\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">RdfXmlParser</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">N3</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'n3'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.rdf'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RdfXmlParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.ttl'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-c1\">N3</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">StreamParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">input files:</p>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n         xmlns:ns0=&quot;b:&quot;&gt;\n\n  &lt;rdf:Description rdf:about=&quot;a:&amp;#xA;&quot;&gt;\n    &lt;ns0:b rdf:resource=&quot;c:c&quot;/&gt;\n  &lt;/rdf:Description&gt;\n\n&lt;/rdf:RDF&gt;\"><pre>&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utf-8<span class=\"pl-pds\">\"</span></span> ?&gt;\n&lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">rdf</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/1999/02/22-rdf-syntax-ns#<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ns0</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b:<span class=\"pl-pds\">\"</span></span>&gt;\n\n  &lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">about</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a:<span class=\"pl-c1\">&amp;#xA;</span><span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">ns0</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">b</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">resource</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>c:c<span class=\"pl-pds\">\"</span></span>/&gt;\n  &lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span>&gt;\n\n&lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span>&gt;</pre></div>\n<div class=\"highlight highlight-source-turtle position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;.\"><pre><span class=\"pl-en\">&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;</span>.</pre></div>\n<p dir=\"auto\">output:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\n</code></pre></div>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-30T12:55:55Z","closedAt":null},{"state":"CLOSED","title":"Parsing issue with SPARQL query on inverse paths in anonymous node","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/99","number":99,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Daniel Beeke","avatarUrl":"https://avatars.githubusercontent.com/u/684215?u=44d5742e760eaa9cd2b05b5025654b028c50eacd&v=4","url":"https://github.com/danielbeeke"}]},"body":"_Originally reported in by https://github.com/comunica/comunica/issues/677 @jaw111._\r\n\r\nThere is an odd combination of syntax that is flagged as an error.\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie a dbpedia-owl:Film ;\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\nGives the error:\r\n\r\n```\r\n# Parse error on line 21:\r\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\r\n----------------------^\r\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\r\n```\r\n\r\nWhilst removing the triple pattern for `a` works just fine:\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨272 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\"><em>Originally reported in by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"645427878\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/comunica/issues/677\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/comunica/issues/677/hovercard\" href=\"https://github.com/comunica/comunica/issues/677\">comunica/comunica#677</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jaw111/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jaw111\">@jaw111</a>.</em></p>\n<p dir=\"auto\">There is an odd combination of syntax that is flagged as an error.</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie a dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span> <span class=\"pl-k\">a</span> dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<p dir=\"auto\">Gives the error:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Parse error on line 21:\n...ad Pitt&quot;@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\"><pre class=\"notranslate\"><code class=\"notranslate\"># Parse error on line 21:\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\n</code></pre></div>\n<p dir=\"auto\">Whilst removing the triple pattern for <code class=\"notranslate\">a</code> works just fine:</p>\n<div class=\"highlight highlight-source-sparql position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span>\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨272</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-25T11:32:44Z","closedAt":"2021-11-29T13:39:03Z"},{"state":"OPEN","title":"Achieve full test coverage","url":"https://github.com/comunica/sparqlee/issues/38","number":38,"repository":{"name":"sparqlee","nameWithOwner":"comunica/sparqlee","url":"https://github.com/comunica/sparqlee","description":"‚öôÔ∏è SPARQL expression evaluator library"},"assignees":{"totalCount":0,"nodes":[]},"body":"We need additional and effective (unit/spec/integration/util) tests so that we achieve a 100% testing coverage.\r\n\r\nRelated to:\r\n\r\n* #35\r\n* #37\r\n* #34\r\n* #50\r\n* #40\r\n* #41\r\n* #21\r\n* #20\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Comunica Association\" src=\"https://comunica.dev/img/comunica_red.svg\" height=\"50\">](https://comunica.dev/association/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">We need additional and effective (unit/spec/integration/util) tests so that we achieve a 100% testing coverage.</p>\n<p dir=\"auto\">Related to:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"446188569\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/35\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/35/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/35\">#35</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"446191377\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/37\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/37/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/37\">#37</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"446186059\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/34\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/34/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/34\">#34</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"506036881\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/50\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/50/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/50\">#50</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"446193104\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/40\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/40/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/40\">#40</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"446195017\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/41\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/41/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/41\">#41</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"409888958\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/21\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/21/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/21\">#21</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"409851929\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/sparqlee/issues/20\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/sparqlee/issues/20/hovercard\" href=\"https://github.com/comunica/sparqlee/issues/20\">#20</a></li>\n</ul>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://comunica.dev/association/\" rel=\"nofollow\"><img alt=\"Comunica Association\" src=\"https://camo.githubusercontent.com/b4c6d02f83ec624d60d45d9d5ab87ca235d9a10f4ce7b84fdb73dda007d94b64/68747470733a2f2f636f6d756e6963612e6465762f696d672f636f6d756e6963615f7265642e737667\" height=\"50\" data-canonical-src=\"https://comunica.dev/img/comunica_red.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2019-05-20T15:53:09Z","closedAt":null},{"state":"OPEN","title":"HTTP caching","url":"https://github.com/comunica/comunica/issues/166","number":166,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"#### Issue type:\r\n\r\n- :heavy_plus_sign: Feature request\r\n\r\n____\r\n#### Description:\r\n\r\nWe should add support for proper client-side caching of HTTP resources.\r\nWe should check both the `Expires`, `Cache-Control`, `ETag` and `Last-Modified` headers, and appropriately send requests with `If-None-Match`/`If-Modified-Since` if needed.\r\n\r\nWe should make the cache actor work on the http bus.\r\n\r\nThere may be npm packages available that can help us out.\r\n\r\nThis article contains some useful information on caching: https://link.springer.com/chapter/10.1007/978-3-319-18818-8_18\r\n\r\nMore relevant papers:\r\n* Bahn, Hyokyung, et al. \"Efficient replacement of nonuniform objects in web caches.\" Computer 35.6 (2002): 65-73.\r\n* Jin, Shudong, and Azer Bestavros. \"GreedyDual‚àó Web caching algorithm: exploiting the two sources of temporal locality in Web request streams.\" Computer Communications 24.2 (2001): 174-183.\r\n* Jin, Shudong, and Azer Bestavros. \"Popularity-aware greedy dual-size web proxy caching algorithms.\" Proceedings 20th IEEE International Conference on Distributed Computing Systems. IEEE, 2000.\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Comunica Association\" src=\"https://comunica.dev/img/comunica_red.svg\" height=\"50\">](https://comunica.dev/association/) |\r\n| ‚Ç¨544 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"heavy_plus_sign\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2795.png\">‚ûï</g-emoji> Feature request</li>\n</ul>\n<hr>\n<h4 dir=\"auto\">Description:</h4>\n<p dir=\"auto\">We should add support for proper client-side caching of HTTP resources.<br>\nWe should check both the <code class=\"notranslate\">Expires</code>, <code class=\"notranslate\">Cache-Control</code>, <code class=\"notranslate\">ETag</code> and <code class=\"notranslate\">Last-Modified</code> headers, and appropriately send requests with <code class=\"notranslate\">If-None-Match</code>/<code class=\"notranslate\">If-Modified-Since</code> if needed.</p>\n<p dir=\"auto\">We should make the cache actor work on the http bus.</p>\n<p dir=\"auto\">There may be npm packages available that can help us out.</p>\n<p dir=\"auto\">This article contains some useful information on caching: <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-18818-8_18\" rel=\"nofollow\">https://link.springer.com/chapter/10.1007/978-3-319-18818-8_18</a></p>\n<p dir=\"auto\">More relevant papers:</p>\n<ul dir=\"auto\">\n<li>Bahn, Hyokyung, et al. \"Efficient replacement of nonuniform objects in web caches.\" Computer 35.6 (2002): 65-73.</li>\n<li>Jin, Shudong, and Azer Bestavros. \"GreedyDual‚àó Web caching algorithm: exploiting the two sources of temporal locality in Web request streams.\" Computer Communications 24.2 (2001): 174-183.</li>\n<li>Jin, Shudong, and Azer Bestavros. \"Popularity-aware greedy dual-size web proxy caching algorithms.\" Proceedings 20th IEEE International Conference on Distributed Computing Systems. IEEE, 2000.</li>\n</ul>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://comunica.dev/association/\" rel=\"nofollow\"><img alt=\"Comunica Association\" src=\"https://camo.githubusercontent.com/b4c6d02f83ec624d60d45d9d5ab87ca235d9a10f4ce7b84fdb73dda007d94b64/68747470733a2f2f636f6d756e6963612e6465762f696d672f636f6d756e6963615f7265642e737667\" height=\"50\" data-canonical-src=\"https://comunica.dev/img/comunica_red.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨544</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2018-07-03T10:59:23Z","closedAt":null},{"state":"OPEN","title":"Clearer error reporting for incorrect input","url":"https://github.com/comunica/comunica/issues/119","number":119,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"_This issue has been modified by @rubensworks to describe the intended solution_\r\n\r\n**Problem:**\r\n\r\nThe problem is that some (most?) errors that can be produced by Comunica are quite cryptic.\r\nThis is a consequence of inter-actor communication happening via mediators, which can produce errors such as:\r\n```\r\nError: https://.../rdf-dereference.json#mediatorRdfParse mediated over all rejecting actors:\r\nError: Unrecognized media type: text/html\r\nError: Unrecognized media type: text/html\r\nError: Unrecognized media type: text/html\r\n    at MediatorRace.js:55\r\n```\r\n\r\nSo the common format is that mediators show an error message that accumulates error messages from failing actors.\r\n\r\n**Possible solution:**\r\n\r\nOne possible solution could be to reformat these types of error messages to something roughly like:\r\n```\r\nError: RDF parsing failed: none of the configured parsers were able to handle the content type 'text/html'.\r\n  Error messages of failing actors:\r\n    ActorNameX: Unrecognized media type: text/html\r\n    ActorNameY: Unrecognized media type: text/html\r\n    ActorNameZ: Unrecognized media type: text/html\r\n```\r\n\r\n(certainly open to other suggestions)\r\n\r\n**Implementation suggestions:**\r\n\r\nWe could have mediators accept an error message format (with placeholders for things such as `contentType` in parsing actions), which can be configured via the different Components.js config files.\r\nThis would mean that every instantiated mediator would have a bus/action-specific error message format.\r\n\r\nEach mediator would also require some polishing (and alignment) in how it produces error messages.\r\n\r\n-----\r\n\r\nOriginal issue:\r\n\r\n#### Issue type:\r\n\r\n- :heavy_plus_sign: Feature request\r\n\r\n#### Description:\r\n\r\nWhen invoking `comunica-sparql` with (for instance) an error in the query, I get:\r\n\r\n```\r\nError: Unknown prefix: schema\r\n    at Object.anonymous (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:498:29)\r\n    at Parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:642:36)\r\n    at Parser.parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/sparql.js:22:37)\r\n    at Object.translate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqlalgebrajs/lib/sparqlAlgebra.js:30:25)\r\n    at ActorSparqlParseAlgebra.run (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/actor-sparql-parse-algebra/lib/ActorSparqlParseAlgebra.js:16:47)\r\n    at MediatorRace.mediate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/core/lib/Mediator.js:80:22)\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n    at Function.Module.runMain (module.js:686:11)\r\n    at startup (bootstrap_node.js:187:16)\r\n```\r\n\r\nWould be helpful to a) hide the stacktrace (only show it when a certain flag is set) and b) for this particular case, make the error message (a bit) more descriptive.\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Comunica Association\" src=\"https://comunica.dev/img/comunica_red.svg\" height=\"50\">](https://comunica.dev/association/) |\r\n| ‚Ç¨1632 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\"><em>This issue has been modified by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rubensworks/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rubensworks\">@rubensworks</a> to describe the intended solution</em></p>\n<p dir=\"auto\"><strong>Problem:</strong></p>\n<p dir=\"auto\">The problem is that some (most?) errors that can be produced by Comunica are quite cryptic.<br>\nThis is a consequence of inter-actor communication happening via mediators, which can produce errors such as:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: https://.../rdf-dereference.json#mediatorRdfParse mediated over all rejecting actors:\nError: Unrecognized media type: text/html\nError: Unrecognized media type: text/html\nError: Unrecognized media type: text/html\n    at MediatorRace.js:55\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: https://.../rdf-dereference.json#mediatorRdfParse mediated over all rejecting actors:\nError: Unrecognized media type: text/html\nError: Unrecognized media type: text/html\nError: Unrecognized media type: text/html\n    at MediatorRace.js:55\n</code></pre></div>\n<p dir=\"auto\">So the common format is that mediators show an error message that accumulates error messages from failing actors.</p>\n<p dir=\"auto\"><strong>Possible solution:</strong></p>\n<p dir=\"auto\">One possible solution could be to reformat these types of error messages to something roughly like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: RDF parsing failed: none of the configured parsers were able to handle the content type 'text/html'.\n  Error messages of failing actors:\n    ActorNameX: Unrecognized media type: text/html\n    ActorNameY: Unrecognized media type: text/html\n    ActorNameZ: Unrecognized media type: text/html\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: RDF parsing failed: none of the configured parsers were able to handle the content type 'text/html'.\n  Error messages of failing actors:\n    ActorNameX: Unrecognized media type: text/html\n    ActorNameY: Unrecognized media type: text/html\n    ActorNameZ: Unrecognized media type: text/html\n</code></pre></div>\n<p dir=\"auto\">(certainly open to other suggestions)</p>\n<p dir=\"auto\"><strong>Implementation suggestions:</strong></p>\n<p dir=\"auto\">We could have mediators accept an error message format (with placeholders for things such as <code class=\"notranslate\">contentType</code> in parsing actions), which can be configured via the different Components.js config files.<br>\nThis would mean that every instantiated mediator would have a bus/action-specific error message format.</p>\n<p dir=\"auto\">Each mediator would also require some polishing (and alignment) in how it produces error messages.</p>\n<hr>\n<p dir=\"auto\">Original issue:</p>\n<h4 dir=\"auto\">Issue type:</h4>\n<ul dir=\"auto\">\n<li><g-emoji class=\"g-emoji\" alias=\"heavy_plus_sign\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2795.png\">‚ûï</g-emoji> Feature request</li>\n</ul>\n<h4 dir=\"auto\">Description:</h4>\n<p dir=\"auto\">When invoking <code class=\"notranslate\">comunica-sparql</code> with (for instance) an error in the query, I get:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: Unknown prefix: schema\n    at Object.anonymous (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:498:29)\n    at Parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:642:36)\n    at Parser.parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/sparql.js:22:37)\n    at Object.translate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqlalgebrajs/lib/sparqlAlgebra.js:30:25)\n    at ActorSparqlParseAlgebra.run (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/actor-sparql-parse-algebra/lib/ActorSparqlParseAlgebra.js:16:47)\n    at MediatorRace.mediate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/core/lib/Mediator.js:80:22)\n    at &lt;anonymous&gt;\n    at process._tickCallback (internal/process/next_tick.js:188:7)\n    at Function.Module.runMain (module.js:686:11)\n    at startup (bootstrap_node.js:187:16)\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: Unknown prefix: schema\n    at Object.anonymous (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:498:29)\n    at Parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/lib/SparqlParser.js:642:36)\n    at Parser.parser.parse (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqljs/sparql.js:22:37)\n    at Object.translate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/sparqlalgebrajs/lib/sparqlAlgebra.js:30:25)\n    at ActorSparqlParseAlgebra.run (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/actor-sparql-parse-algebra/lib/ActorSparqlParseAlgebra.js:16:47)\n    at MediatorRace.mediate (/Users/ruben/.nvm/versions/node/v8.9.4/lib/node_modules/@comunica/actor-init-sparql/node_modules/@comunica/core/lib/Mediator.js:80:22)\n    at &lt;anonymous&gt;\n    at process._tickCallback (internal/process/next_tick.js:188:7)\n    at Function.Module.runMain (module.js:686:11)\n    at startup (bootstrap_node.js:187:16)\n</code></pre></div>\n<p dir=\"auto\">Would be helpful to a) hide the stacktrace (only show it when a certain flag is set) and b) for this particular case, make the error message (a bit) more descriptive.</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://comunica.dev/association/\" rel=\"nofollow\"><img alt=\"Comunica Association\" src=\"https://camo.githubusercontent.com/b4c6d02f83ec624d60d45d9d5ab87ca235d9a10f4ce7b84fdb73dda007d94b64/68747470733a2f2f636f6d756e6963612e6465762f696d672f636f6d756e6963615f7265642e737667\" height=\"50\" data-canonical-src=\"https://comunica.dev/img/comunica_red.svg\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨1632</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2018-03-19T08:42:12Z","closedAt":null},{"state":"OPEN","title":"Allow HTTP timeout configuration","url":"https://github.com/comunica/comunica/issues/70","number":70,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"We should allow users to pass an HTTP timeout value via the context (`httpTimeout`).\r\n\r\nThis could be implemented using our own `setTimeout` and the fetch `AbortController`: https://github.com/bitinn/node-fetch/issues/95\r\n\r\nWe should keep in mind here that we should clear our own timeout once the request completes (response object is available).\r\n\r\nAdditionally, we need an extra context option (boolean:  `httpTimeoutOnBody`) to make it so that the timeout not only applies to the time until response starts coming in, but also to the time until the response body is fully available. The latter could take longer, or potentially be infinite for e.g. continuous data streams. This should also take into account that response bodies can be cancelled from within Comunica.\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\">](https://netwerkdigitaalerfgoed.nl/) |\r\n| ‚Ç¨1088 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p dir=\"auto\">We should allow users to pass an HTTP timeout value via the context (<code class=\"notranslate\">httpTimeout</code>).</p>\n<p dir=\"auto\">This could be implemented using our own <code class=\"notranslate\">setTimeout</code> and the fetch <code class=\"notranslate\">AbortController</code>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"145106116\" data-permission-text=\"Title is private\" data-url=\"https://github.com/node-fetch/node-fetch/issues/95\" data-hovercard-type=\"issue\" data-hovercard-url=\"/node-fetch/node-fetch/issues/95/hovercard\" href=\"https://github.com/node-fetch/node-fetch/issues/95\">node-fetch/node-fetch#95</a></p>\n<p dir=\"auto\">We should keep in mind here that we should clear our own timeout once the request completes (response object is available).</p>\n<p dir=\"auto\">Additionally, we need an extra context option (boolean:  <code class=\"notranslate\">httpTimeoutOnBody</code>) to make it so that the timeout not only applies to the time until response starts coming in, but also to the time until the response body is fully available. The latter could take longer, or potentially be infinite for e.g. continuous data streams. This should also take into account that response bodies can be cancelled from within Comunica.</p>\n<hr>\n<h2 dir=\"auto\">Bounty</h2>\n<p dir=\"auto\">A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://netwerkdigitaalerfgoed.nl/\" rel=\"nofollow\"><img alt=\"Netwerk Digitaal Erfgoed\" src=\"https://user-images.githubusercontent.com/440384/134636829-f730230c-bfec-4d40-86d1-67f28479cdcc.png\" height=\"25\" style=\"max-width: 100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨1088</td>\n</tr>\n</tbody>\n</table>\n\n<p dir=\"auto\"><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2018-01-15T14:21:31Z","closedAt":null}]}}}},"__N_SSG":true}