{"pageProps":{"frontmatter":{"title":"Hypermedia","description":"Discovery of data source capabilities during query execution."},"body":"\nComunica enables **[hypermedia](https://en.wikipedia.org/wiki/HATEOAS)-driven query execution**.\nThis allows users to provide data sources by URL,\nand Comunica will automatically detect the querying capabilities for this source\nto determine an efficient query execution plan. \n\nThis strategy makes it so that when providing a link to a SPARQL endpoint (e.g. https://dbpedia.org/sparql),\ncommunication will be done using SPARQL queries.\nWhile when providing a link to a plain RDF file (e.g. http://ruben.verborgh.org/profile/),\nthe whole file will be downloaded and queried in-memory.\n\n## Hypermedia actor\n\nThe actor in Comunica that drives hypermedia handling is\n[`@comunica/actor-rdf-resolve-quad-pattern-hypermedia`](https://github.com/comunica/comunica/tree/master/packages/actor-rdf-resolve-quad-pattern-hypermedia).\nThis actor is registered to the [RDF Resolve Quad Pattern bus](/docs/modify/advanced/buses/#rdf-resolve-quad-pattern).\nThis means that this actor will be invoked for every triple/quad pattern in the query.\n\n<div class=\"note\">\nThe <a href=\"/docs/modify/advanced/architecture_sparql/\">SPARQL architecture</a>\nshows how this hypermedia actor relates to all other actors and buses.\n</div>\n\n## Steps for handling hypermedia\n\nFor each URL-based data source,\nthe hypermedia actor will always go through the following steps:\n\n1. Dereference RDF ([RDF Dereference bus](/docs/modify/advanced/buses/#rdf-dereference))\n2. Split data and metadata streams ([RDF Metadata bus](/docs/modify/advanced/buses/#rdf-metadata))\n3. Extract metadata as object ([RDF Metadata Extract bus](/docs/modify/advanced/buses/#rdf-metadata-extract))\n4. Determine links to other sources ([RDF Resolve Hypermedia Links bus](/docs/modify/advanced/buses/#rdf-resolve-hypermedia-links))\n5. Handle source based on metadata ([RDF Resolve Hypermedia bus](/docs/modify/advanced/buses/#rdf-resolve-hypermedia))\n\nHereafter, we go over these three steps using three example sources:\n\n1. https://dbpedia.org/sparql\n2. http://fragments.dbpedia.org/2016-04/en\n3. https://ruben.verborgh.org/profile/\n\n## 1. Dereference RDF\n\nAn HTTP(S) request is done to retrieve the RDF data at the given location\nvia [content negotiation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation).\nDifferent ways of doing this may exist in the [RDF Dereference bus](/docs/modify/advanced/buses/#rdf-dereference).\nConcretely, the input is an URL, and the output is a stream of parsed RDF triples/quads.\n\nFor example:\n\n1. https://dbpedia.org/sparql\n```turtle\nns1:sparql\trdf:type\tsd:Service ;\n\t        sd:endpoint\tns1:sparql ;\n\t        sd:feature\tsd:UnionDefaultGraph ,\n\t\t    sd:DereferencesURIs .\n@prefix ns3:\t<http://www.w3.org/ns/formats/> .\nns1:sparql\tsd:resultFormat\tns3:SPARQL_Results_JSON ,\n\t\t    ns3:SPARQL_Results_XML ,\n\t\t    ns3:Turtle ,\n\t\t    ns3:N-Triples ,\n\t\t    ns3:N3 ,\n\t\t    ns3:RDF_XML ,\n\t\t    ns3:SPARQL_Results_CSV ,\n\t\t    ns3:RDFa ;\n\t        sd:supportedLanguage\tsd:SPARQL10Query ;\n\t        sd:url\tns1:sparql .\n```\n2. http://fragments.dbpedia.org/2016-04/en\n```turtle\n<https://fragments.dbpedia.org/#dataset> hydra:member <https://fragments.dbpedia.org/2016-04/en#dataset>.\n<https://fragments.dbpedia.org/2016-04/en#dataset> a void:Dataset, hydra:Collection;\n    void:subset <https://fragments.dbpedia.org/2016-04/en>;\n    hydra:search _:triplePattern.\n_:triplePattern hydra:template \"https://fragments.dbpedia.org/2016-04/en{?subject,predicate,object}\";\n    hydra:variableRepresentation hydra:ExplicitRepresentation;\n    hydra:mapping _:subject, _:predicate, _:object.\n_:subject hydra:variable \"subject\";\n    hydra:property rdf:subject.\n_:predicate hydra:variable \"predicate\";\n    hydra:property rdf:predicate.\n_:object hydra:variable \"object\";\n    hydra:property rdf:object.\n<https://fragments.dbpedia.org/2016-04/en> void:subset <https://fragments.dbpedia.org/2016-04/en>;\n    a hydra:PartialCollectionView;\n    dcterms:title \"Linked Data Fragment of DBpedia 2016-04\"@en;\n    dcterms:description \"Triple Pattern Fragment of the 'DBpedia 2016-04' dataset containing triples matching the pattern { ?s ?p ?o }.\"@en;\n    dcterms:source <https://fragments.dbpedia.org/2016-04/en#dataset>;\n    hydra:totalItems \"1040358853\"^^xsd:integer;\n    void:triples \"1040358853\"^^xsd:integer;\n    hydra:itemsPerPage \"100\"^^xsd:integer;\n    hydra:first <https://fragments.dbpedia.org/2016-04/en?page=1>;\n    hydra:next <https://fragments.dbpedia.org/2016-04/en?page=2>.\n<http://0-access.newspaperarchive.com.lib.utep.edu/us/mississippi/biloxi/biloxi-daily-herald/1899/05-06/page-6?tag=tierce+wine&rtserp=tags/tierce-wine?page=2> dbpprop:date \"1899-05-06\"^^xsd:date;\n    dbpprop:isCitedBy <http://dbpedia.org/resource/Tierce_(unit)>;\n    dbpprop:newspaper \"Biloxi Daily Herald\";\n    dbpprop:page \"6\";\n    dbpprop:title \"A New System of Weights and Measures\";\n    dbpprop:url <http://0-access.newspaperarchive.com.lib.utep.edu/us/mississippi/biloxi/biloxi-daily-herald/1899/05-06/page-6?tag=tierce+wine&rtserp=tags/tierce-wine?page=2>.\n...\n```\n3. https://ruben.verborgh.org/profile/\n```turtle\n<https://ruben.verborgh.org/profile/>\n    a foaf:Document, foaf:PersonalProfileDocument;\n    rdfs:label \"Ruben Verborgh’s FOAF profile\"@en;\n    foaf:maker :me;\n    foaf:primaryTopic :me.\n:me a foaf:Person;\n    foaf:name  \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    rdfs:label \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    vcard:fn   \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    con:preferredURI \"https://ruben.verborgh.org/profile/#me\";\n    foaf:givenName \"Ruben\"@en, \"Ruben\"@nl;\n    foaf:familyName \"Verborgh\"@en, \"Verborgh\"@nl;\n...\n```\n\n## 2. Split data and metadata streams\n\nSome RDF sources may include metadata inside the document,\nsuch as [Triple Pattern Fragments](https://linkeddatafragments.org/specification/triple-pattern-fragments/).\nAs such, there needs to be a way to distinguish between data and metadata triples,\nfor which different strategies exist in the [RDF Metadata bus](/docs/modify/advanced/buses/#rdf-metadata).\n\nFor example:\n\n1. https://dbpedia.org/sparql\n\n**Data:** _empty_\n\n**Metadata:**\n```turtle\nns1:sparql\trdf:type\tsd:Service ;\n\t        sd:endpoint\tns1:sparql ;\n\t        sd:feature\tsd:UnionDefaultGraph ,\n\t\t    sd:DereferencesURIs .\n@prefix ns3:\t<http://www.w3.org/ns/formats/> .\nns1:sparql\tsd:resultFormat\tns3:SPARQL_Results_JSON ,\n\t\t    ns3:SPARQL_Results_XML ,\n\t\t    ns3:Turtle ,\n\t\t    ns3:N-Triples ,\n\t\t    ns3:N3 ,\n\t\t    ns3:RDF_XML ,\n\t\t    ns3:SPARQL_Results_CSV ,\n\t\t    ns3:RDFa ;\n\t        sd:supportedLanguage\tsd:SPARQL10Query ;\n\t        sd:url\tns1:sparql .\n```\n2. http://fragments.dbpedia.org/2016-04/en\n\n**Data:**\n```turtle\n<http://0-access.newspaperarchive.com.lib.utep.edu/us/mississippi/biloxi/biloxi-daily-herald/1899/05-06/page-6?tag=tierce+wine&rtserp=tags/tierce-wine?page=2> dbpprop:date \"1899-05-06\"^^xsd:date;\n    dbpprop:isCitedBy <http://dbpedia.org/resource/Tierce_(unit)>;\n    dbpprop:newspaper \"Biloxi Daily Herald\";\n    dbpprop:page \"6\";\n    dbpprop:title \"A New System of Weights and Measures\";\n    dbpprop:url <http://0-access.newspaperarchive.com.lib.utep.edu/us/mississippi/biloxi/biloxi-daily-herald/1899/05-06/page-6?tag=tierce+wine&rtserp=tags/tierce-wine?page=2>.\n...\n```\n**Metadata:**\n```turtle\n<https://fragments.dbpedia.org/#dataset> hydra:member <https://fragments.dbpedia.org/2016-04/en#dataset>.\n<https://fragments.dbpedia.org/2016-04/en#dataset> a void:Dataset, hydra:Collection;\n    void:subset <https://fragments.dbpedia.org/2016-04/en>;\n    hydra:search _:triplePattern.\n_:triplePattern hydra:template \"https://fragments.dbpedia.org/2016-04/en{?subject,predicate,object}\";\n    hydra:variableRepresentation hydra:ExplicitRepresentation;\n    hydra:mapping _:subject, _:predicate, _:object.\n_:subject hydra:variable \"subject\";\n    hydra:property rdf:subject.\n_:predicate hydra:variable \"predicate\";\n    hydra:property rdf:predicate.\n_:object hydra:variable \"object\";\n    hydra:property rdf:object.\n<https://fragments.dbpedia.org/2016-04/en> void:subset <https://fragments.dbpedia.org/2016-04/en>;\n    a hydra:PartialCollectionView;\n    dcterms:title \"Linked Data Fragment of DBpedia 2016-04\"@en;\n    dcterms:description \"Triple Pattern Fragment of the 'DBpedia 2016-04' dataset containing triples matching the pattern { ?s ?p ?o }.\"@en;\n    dcterms:source <https://fragments.dbpedia.org/2016-04/en#dataset>;\n    hydra:totalItems \"1040358853\"^^xsd:integer;\n    void:triples \"1040358853\"^^xsd:integer;\n    hydra:itemsPerPage \"100\"^^xsd:integer;\n    hydra:first <https://fragments.dbpedia.org/2016-04/en?page=1>;\n    hydra:next <https://fragments.dbpedia.org/2016-04/en?page=2>.\n```\n\n3. https://ruben.verborgh.org/profile/\n\n**Data:**\n```turtle\n<https://ruben.verborgh.org/profile/>\n    a foaf:Document, foaf:PersonalProfileDocument;\n    rdfs:label \"Ruben Verborgh’s FOAF profile\"@en;\n    foaf:maker :me;\n    foaf:primaryTopic :me.\n:me a foaf:Person;\n    foaf:name  \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    rdfs:label \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    vcard:fn   \"Ruben Verborgh\"@en, \"Ruben Verborgh\"@nl;\n    con:preferredURI \"https://ruben.verborgh.org/profile/#me\";\n    foaf:givenName \"Ruben\"@en, \"Ruben\"@nl;\n    foaf:familyName \"Verborgh\"@en, \"Verborgh\"@nl;\n...\n```\n\n**Metadata:** _empty_\n\n## 3. Extract metadata as object\n\nUsing actors on the [RDF Metadata Extract bus](/docs/modify/advanced/buses/#rdf-metadata-extract),\nrelevant parts of the metadata stream are identified,\nand a convenient metadata object is constructed for later use.\n\nFor example:\n\n1. https://dbpedia.org/sparql\n```json\n{\n  \"sparqlService\": \"https://dbpedia.org/sparql\"\n}\n```\n2. http://fragments.dbpedia.org/2016-04/en\n```json\n{\n  \"first\": \"https://fragments.dbpedia.org/2016-04/en?page=1\",\n  \"next\": \"https://fragments.dbpedia.org/2016-04/en?page=2\",\n  \"searchForms\": {\n    \"values\": [\n      {\n        \"mappings\": {\n          \"subject\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#subject\",\n          \"predicate\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate\",\n          \"object\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#object\"\n        },\n        \"template\": \"https://fragments.dbpedia.org/2016-04/en{?subject,predicate,object}\"\n      }\n    ]\n  },\n  \"totalItems\": 1040358853\n}\n```\n3. https://ruben.verborgh.org/profile/\n```json\n{}\n```\n\n## 4. Determine links to other sources\n\nBased on the detected metadata, links are extracted that can optionally be followed.\nThese links are determined using actors on the [RDF Resolve Hypermedia Links bus](/docs/modify/advanced/buses/#rdf-resolve-hypermedia-links).\n\nFor example:\n\n1. https://dbpedia.org/sparql: _None_\n2. http://fragments.dbpedia.org/2016-04/en: https://fragments.dbpedia.org/2016-04/en?page=2\n3. https://ruben.verborgh.org/profile/: _None_\n\n## 5. Handle source based on metadata\n\nFinally, the [RDF Resolve Hypermedia bus](/docs/modify/advanced/buses/#rdf-resolve-hypermedia)\ncontains actors that can handle sources based on the extracted metadata.\n\nConcretely, the detected metadata will be given to each actor on the bus,\nand the actor that can handle it with the best _filtering capabilities_\nwill be allowed to handle it.\n\nFor example:\n\n1. https://dbpedia.org/sparql: SPARQL query to https://dbpedia.org/sparql\n2. http://fragments.dbpedia.org/2016-04/en: Fill in `https://fragments.dbpedia.org/2016-04/en{?subject,predicate,object}`, and follow all subsequent next-page links.\n3. https://ruben.verborgh.org/profile/: No hypermedia, so fallback to querying over all triples in the returned data stream.\n","excerpt":"","path":"/docs/modify/advanced/hypermedia","paths":["/about/","/ask/","/blog/","/blog/2020-08-19-intro/","/blog/2020-08-24-release_1_16/","/blog/2020-09-25-release_1_17/","/contribute/","/docs/","/docs/query/","/docs/query/getting_started/","/docs/query/getting_started/query_cli/","/docs/query/getting_started/query_cli_file/","/docs/query/getting_started/query_app/","/docs/query/getting_started/query_browser_app/","/docs/query/getting_started/query_docker/","/docs/query/getting_started/setup_endpoint/","/docs/query/getting_started/setup_web_client/","/docs/query/getting_started/query_dev_version/","/docs/query/usage/","/docs/query/faq/","/docs/query/advanced/","/docs/query/advanced/basic_auth/","/docs/query/advanced/caching/","/docs/query/advanced/context/","/docs/query/advanced/federation/","/docs/query/advanced/graphql_ld/","/docs/query/advanced/hdt/","/docs/query/advanced/logging/","/docs/query/advanced/memento/","/docs/query/advanced/proxying/","/docs/query/advanced/rdfjs/","/docs/query/advanced/rdfjs_querying/","/docs/query/advanced/result_formats/","/docs/query/advanced/solid/","/docs/query/advanced/source_types/","/docs/query/advanced/sparql_query_types/","/docs/query/advanced/specifications/","/docs/modify/","/docs/modify/getting_started/","/docs/modify/getting_started/custom_config_cli/","/docs/modify/getting_started/custom_config_app/","/docs/modify/getting_started/custom_init/","/docs/modify/getting_started/custom_web_client/","/docs/modify/getting_started/contribute_actor/","/docs/modify/getting_started/actor_parameter/","/docs/modify/extensions/","/docs/modify/faq/","/docs/modify/advanced/","/docs/modify/advanced/algebra/","/docs/modify/advanced/architecture_core/","/docs/modify/advanced/architecture_sparql/","/docs/modify/advanced/browser_builds/","/docs/modify/advanced/buses/","/docs/modify/advanced/componentsjs/","/docs/modify/advanced/hypermedia/","/docs/modify/advanced/logging/","/docs/modify/advanced/mediators/","/docs/modify/advanced/observers/","/docs/modify/advanced/query_output_types/","/docs/modify/advanced/rdf_parsing_serializing/","/docs/modify/advanced/sparqlee/","/docs/modify/advanced/testing/","/docs/modify/benchmarking/","/logos/","/research/","/research/amf/","/roadmap/"],"mattersData":{"/about/":{"title":"About","description":"Learn more about Comunica."},"/ask/":{"title":"Ask","description":"Ask questions about Comunica."},"/blog/":{"title":"Blog","description":"Blog posts, containing announcements or other news.","blog_index":true},"/blog/2020-08-19-intro/":{"title":"A New Website for Comunica","excerpt":"\nWe're happy to present a brand new website for Comunica! 🎉\n_Don't know that Comunica is? [Read about it here](/about/)._\n\nThis new version contains all **basic information** around Comunica.\nAdditionally, it contains **guides** on how to [query with Comunica](/docs/query/),\nand how to [modify or extend it](/docs/modify/). \n\n"},"/blog/2020-08-24-release_1_16/":{"title":"Release 1.16.0: Full spec compliance, property paths, CSV/TSV, basic auth, and fixes","excerpt":"\nWith the latest release of Comunica, we have achieved the major milestone of **full compliance to the SPARQL 1.1 specification**.\nWhile Comunica has had support for all SPARQL 1.1 operators for a while,\nsome small parts were not always fully handled according to the spec,\nand property paths were not fully supported.\n\nThanks to the help of several students over the summer, these issues have been resolved,\nand all tests from [the SPARQL 1.1 test suite](https://w3c.github.io/rdf-tests/sparql11/) now pass.\n\n"},"/blog/2020-09-25-release_1_17/":{"title":"Hacktoberfest and Release 1.17.0","excerpt":"\nIn this post, we give an overview of\ncontribution possibilities during [Hacktoberfest](https://hacktoberfest.digitalocean.com/),\nand the newly released 1.17.0 version. \n\n"},"/contribute/":{"title":"Contribute","description":"Contribute to the development of Comunica."},"/docs/":{"title":"Documentation","description":"Overview of all Comunica documentation.","index":true},"/docs/query/":{"title":"Query with Comunica","description":"Learn how to execute queries in different environments. Such as live in the browser, in JavaScript applications, or the CLI.","index":true},"/docs/query/getting_started/":{"title":"Getting started with querying","description":"Basic guides on how to easily get started with querying.","index":true},"/docs/query/getting_started/query_cli/":{"title":"Querying from the command line","description":"Execute SPARQL queries directly from the command line."},"/docs/query/getting_started/query_cli_file/":{"title":"Querying local files from the command line","description":"Execute SPARQL queries over local RDF files directly from the command line."},"/docs/query/getting_started/query_app/":{"title":"Querying in a JavaScript app","description":"Execute SPARQL queries from within your application using the JavaScript API."},"/docs/query/getting_started/query_browser_app/":{"title":"Querying in a JavaScript browser app","description":"Execute SPARQL queries from within your client-side browser application using the JavaScript API."},"/docs/query/getting_started/query_docker/":{"title":"Querying from a Docker container","description":"Execute SPARQL queries within a Docker container."},"/docs/query/getting_started/setup_endpoint/":{"title":"Setting up a SPARQL endpoint","description":"Allow querying over HTTP via the SPARQL protocol"},"/docs/query/getting_started/setup_web_client/":{"title":"Setting up a Web client","description":"Set up a user-friendly static Web page where SPARQL queries can be executed client-side"},"/docs/query/getting_started/query_dev_version/":{"title":"Query using the latest development version","description":"If you want to make use of the latest changes that are not released yet"},"/docs/query/usage/":{"title":"Usage showcase","description":"Examples of where Comunica is used."},"/docs/query/faq/":{"title":"Querying FAQ","description":"Frequently asked questions about using Comunica."},"/docs/query/advanced/":{"title":"Advanced querying","description":"Advanced guides on how to get the most out of Comunica.","index":true},"/docs/query/advanced/basic_auth/":{"title":"HTTP Basic Authentication","description":"Send authenticated HTTP requests by including username and password."},"/docs/query/advanced/caching/":{"title":"Caching","description":"When remote sources are requested, caching allows them to be reused in the future."},"/docs/query/advanced/context/":{"title":"Passing a context","description":"A context can be passed to a query engine to tweak its runtime settings."},"/docs/query/advanced/federation/":{"title":"Federated Querying","description":"Query over the union of data within any number of sources"},"/docs/query/advanced/graphql_ld/":{"title":"GraphQL-LD","description":"Using the power of JSON-LD contexts, GraphQL queries can be executed by Comunica"},"/docs/query/advanced/hdt/":{"title":"HDT","description":"HDT offers highly compressed immutable RDF storage."},"/docs/query/advanced/logging/":{"title":"Logging","description":"Loggers can be set to different logging levels to inspect what Comunica is doing behind the scenes."},"/docs/query/advanced/memento/":{"title":"Memento","description":"Using the Memento protocol, time travel queries can be executed."},"/docs/query/advanced/proxying/":{"title":"HTTP Proxy","description":"All HTTP requests can optionally go through a proxy."},"/docs/query/advanced/rdfjs/":{"title":"RDF/JS","description":"To achieve maximum interoperability between different JavaScript libraries, Comunica builds on top of the RDF/JS specifications."},"/docs/query/advanced/rdfjs_querying/":{"title":"Querying over RDF/JS sources","description":"If the built-in source types are not sufficient, you can pass a custom JavaScript object implementing a specific interface."},"/docs/query/advanced/result_formats/":{"title":"Result formats","description":"Query results can be serialized in different formats."},"/docs/query/advanced/solid/":{"title":"Solid","description":"Solid – the Web-based decentralization ecosystem – can be queried with Comunica."},"/docs/query/advanced/source_types/":{"title":"Source types","description":"Comunica detects and handles different types of sources."},"/docs/query/advanced/sparql_query_types/":{"title":"SPARQL query types","description":"Different SPARQL query types are possible, such as SELECT, CONSTRUCT, ASK, ..."},"/docs/query/advanced/specifications/":{"title":"Supported specifications","description":"Comunica supports several RDF-related specifications"},"/docs/modify/":{"title":"Modify Comunica","description":"Learn how to configure your own Comunica engine, or extend Comunica by implementing new components.","index":true},"/docs/modify/getting_started/":{"title":"Getting started with modification","description":"Basic guides on how to easily get started with Comunica modification.","index":true},"/docs/modify/getting_started/custom_config_cli/":{"title":"Querying with a custom configuration from the command line","description":"Create a custom configuration of Comunica modules with reduced features, and query with it from the command line."},"/docs/modify/getting_started/custom_config_app/":{"title":"Querying with a custom configuration in a JavaScript app","description":"Create a custom configuration of Comunica modules with changed features, and query with it from within your application using the JavaScript API."},"/docs/modify/getting_started/custom_init/":{"title":"Exposing your custom config as an npm package","description":"Wrap your config in an npm package, and expose a CLI tool and a JavaScript API."},"/docs/modify/getting_started/custom_web_client/":{"title":"Exposing your custom config in a Web client","description":"Demonstrate your query engine as a static Web page."},"/docs/modify/getting_started/contribute_actor/":{"title":"Contributing a new query operation actor to the Comunica repository","description":"Setup a development environment, implement a new actor, and create a pull request."},"/docs/modify/getting_started/actor_parameter/":{"title":"Adding a config parameter to an actor","description":"For an existing actor, add a parameter that can be customized in the config file."},"/docs/modify/extensions/":{"title":"Extensions","description":"Existing extensions of Comunica."},"/docs/modify/faq/":{"title":"Modify FAQ","description":"Frequently asked question about Comunica modification."},"/docs/modify/advanced/":{"title":"Advanced modification","description":"Advanced guides on how to get the most out of Comunica modification.","index":true},"/docs/modify/advanced/algebra/":{"title":"Algebra","description":"The internal representation of queries during query execution."},"/docs/modify/advanced/architecture_core/":{"title":"Core Architecture","description":"The low-level software architecture of Comunica for achieving modularity."},"/docs/modify/advanced/architecture_sparql/":{"title":"SPARQL Architecture","description":"The high-level software architecture of Comunica for implementing SPARQL."},"/docs/modify/advanced/browser_builds/":{"title":"Browser builds","description":"All modules in Comunica can be built for the browser."},"/docs/modify/advanced/buses/":{"title":"Buses and Actors","description":"An overview of all buses in Comunica and their actors."},"/docs/modify/advanced/componentsjs/":{"title":"Components.js","description":"Components.js is the dependency injection framework that Comunica uses to wire components via config files."},"/docs/modify/advanced/hypermedia/":{"title":"Hypermedia","description":"Discovery of data source capabilities during query execution."},"/docs/modify/advanced/logging/":{"title":"Logging","description":"How to log messages from within actors."},"/docs/modify/advanced/mediators/":{"title":"Mediators","description":"An overview of all mediators in Comunica."},"/docs/modify/advanced/observers/":{"title":"Observers","description":"Passively observe actions executed by actors on a given bus."},"/docs/modify/advanced/query_output_types/":{"title":"Query output types","description":"An overview of the different output types for query operations."},"/docs/modify/advanced/rdf_parsing_serializing/":{"title":"RDF Parsing and Serializing","description":"Basic concepts behind parsing and serializing RDF."},"/docs/modify/advanced/sparqlee/":{"title":"Sparqlee","description":"The SPARQL expression evaluation engine of Comunica."},"/docs/modify/advanced/testing/":{"title":"Testing","description":"The unit and integration tests that lead to a more stable codebase."},"/docs/modify/benchmarking/":{"title":"Benchmarking","description":"Guidelines on running experiments with Comunica."},"/logos/":{"title":"Logos","description":"Free to use logos of Comunica."},"/research/":{"title":"Research","description":"An overview of these research surrounding Comunica."},"/research/amf/":{"title":"Approximate Membership Functions","description":"An overview of research that has been done on AMFs during query execution."},"/roadmap/":{"title":"Roadmap","description":"The long-term goals of Comunica"}}},"__N_SSG":true}