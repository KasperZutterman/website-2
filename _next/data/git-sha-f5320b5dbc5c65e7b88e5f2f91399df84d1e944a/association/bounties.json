{"pageProps":{"githubData":{"data":{"search":{"nodes":[{"title":"Stream scalability issues","url":"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/76","number":76,"repository":{"name":"jsonld-streaming-parser.js","nameWithOwner":"rubensworks/jsonld-streaming-parser.js","url":"https://github.com/rubensworks/jsonld-streaming-parser.js","description":"A fast and lightweight streaming JSON-LD parser for JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"This is a master issue that acts as an overview of the following issues:\r\n\r\n* #71\r\n* #65\r\n* #66\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨4480 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p>This is a master issue that acts as an overview of the following issues:</p>\n<ul>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"741635227\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/71/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/71\">#71</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"635222528\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/65/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/65\">#65</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"636110731\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rubensworks/jsonld-streaming-parser.js/issues/66/hovercard\" href=\"https://github.com/rubensworks/jsonld-streaming-parser.js/issues/66\">#66</a></li>\n</ul>\n<hr>\n<h2>Bounty</h2>\n<p>A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width:100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨4480</td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-07-20T11:50:24Z"},{"title":"Comunica goes out-of-memory","url":"https://github.com/comunica/comunica/issues/826","number":826,"repository":{"name":"comunica","nameWithOwner":"comunica/comunica","url":"https://github.com/comunica/comunica","description":"üì¨ A knowledge graph querying framework for JavaScript"},"assignees":{"totalCount":1,"nodes":[{"name":"Ruben Taelman","avatarUrl":"https://avatars.githubusercontent.com/u/440384?u=24e3ceaf4fd5660c4b960e5e4ab9d1b57c3c5899&v=4","url":"https://github.com/rubensworks"}]},"body":"#### Issue type:\r\n\r\n- :bug: Bug <!--Don't change this issue type!-->\r\n\r\n____\r\n#### Description:\r\n\r\nWe're experiencing memory issues where a NodeJS process goes out-of-memory within ~20 seconds. We've managed to create a minimum working example that shows the same behaviour, although it takes a bit longer (depending on your hardware and node-js memory settings):\r\n\r\n```js\r\nconst { newEngine } = require(\"@comunica/actor-init-sparql-rdfjs\");\r\nasync function run() {\r\n  const engine = newEngine();\r\n  while (true) {\r\n    await engine.query(\"SELECT * WHERE { ?s ?p ?o }\", {\r\n      sources: [],\r\n    });\r\n  }\r\n}\r\nrun();\r\n```\r\n\r\nTo test, run:\r\n\r\n```sh\r\nNODE_OPTIONS=--max-old-space-size=256 node ./mwe.js\r\n```\r\n\r\n(Decreasing the node-js memory is optional. It ensures you don't have to wait too long for the process to crash.)\r\n\r\ncc @LaurensRietveld\r\n\r\n\r\n____\r\n#### Environment:\r\n\r\n<!--Output of the `comunica-sparql -v` command.-->\r\n<!--If running in a development environment, this must be the output of `node ./packages/actor-init-sparql/bin/query.js -v`-->\r\n\r\n`node ./node_modules/@comunica/actor-init-sparql/bin/query.js -v` prints\r\n\r\n| software            | version\r\n| ------------------- | -------\r\n| Comunica Init Actor | 1.21.1 \r\n| node                | v12.22.1\r\n| npm                 | 6.14.12\r\n| yarn                | 1.22.5\r\n| Operating System    | linux (Linux 5.8.0-53-generic)\r\n\r\n#### Crash log:\r\n<details>\r\n<summary>Click here to (un)fold the logs</summary>\r\n\r\n```\r\n<--- Last few GCs --->\r\n\r\n[97485:0x3280eb0]    72871 ms: Mark-sweep 242.4 (261.0) -> 242.4 (250.0) MB, 99.5 / 1.1 ms  (average mu = 0.138, current mu = 0.000) last resort GC in old space requested\r\n[97485:0x3280eb0]    72975 ms: Mark-sweep 242.4 (250.0) -> 242.2 (250.0) MB, 103.3 / 1.2 ms  (average mu = 0.072, current mu = 0.000) last resort GC in old space requested\r\n\r\n\r\n<--- JS stacktrace --->\r\n\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0x140de99]\r\nSecurity context: 0x0890d5f408d1 <JSObject>\r\n    1: set [0x890d5f46691](this=0x3b290c15ed31 <Map map = 0x3a65e180f29>,4294077,0x3b290c15ecc1 <WeakReference map = 0x3a65e1a0739>)\r\n    2: emitInitNative [0x2f0ae50c25a1] [internal/async_hooks.js:~186] [pc=0x20728fc03e01](this=0x072d3c3e1b49 <PromiseWrap map = 0xc25c91dc319>,4294077,0x0f2388e499d1 <String[#7]: PROMISE>,4294071,0x072d3c3e1b49 <PromiseWrap map = 0...\r\n\r\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\r\n 1: 0xa1a640 node::Abort() [node]\r\n 2: 0xa1aa4c node::OnFatalError(char const*, char const*) [node]\r\n 3: 0xb9a68e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\r\n 4: 0xb9aa09 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\r\n 5: 0xd57c85  [node]\r\n 6: 0xd685d8 v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]\r\n 7: 0xd2f2cd v8::internal::Factory::NewFixedArrayWithFiller(v8::internal::RootIndex, int, v8::internal::Object, v8::internal::AllocationType) [node]\r\n 8: 0xd2f3c0 v8::internal::Handle<v8::internal::FixedArray> v8::internal::Factory::NewFixedArrayWithMap<v8::internal::FixedArray>(v8::internal::RootIndex, int, v8::internal::AllocationType) [node]\r\n 9: 0xf5e100 v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::Allocate(v8::internal::Isolate*, int, v8::internal::AllocationType) [node]\r\n10: 0xf5e1b1 v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::Rehash(v8::internal::Isolate*, v8::internal::Handle<v8::internal::OrderedHashMap>, int) [node]\r\n11: 0xf5e7fb v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::EnsureGrowable(v8::internal::Isolate*, v8::internal::Handle<v8::internal::OrderedHashMap>) [node]\r\n12: 0x10550c8 v8::internal::Runtime_MapGrow(int, unsigned long*, v8::internal::Isolate*) [node]\r\n13: 0x140de99  [node]\r\nAborted (core dumped)\r\n```\r\n</details>\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n|  |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<h4>Issue type:</h4>\n<ul>\n<li><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png\">üêõ</g-emoji> Bug </li>\n</ul>\n<hr>\n<h4>Description:</h4>\n<p>We're experiencing memory issues where a NodeJS process goes out-of-memory within ~20 seconds. We've managed to create a minimum working example that shows the same behaviour, although it takes a bit longer (depending on your hardware and node-js memory settings):</p>\n<div class=\"highlight highlight-source-js position-relative\" data-snippet-clipboard-copy-content=\"const { newEngine } = require(&quot;@comunica/actor-init-sparql-rdfjs&quot;);\nasync function run() {\n  const engine = newEngine();\n  while (true) {\n    await engine.query(&quot;SELECT * WHERE { ?s ?p ?o }&quot;, {\n      sources: [],\n    });\n  }\n}\nrun();\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> newEngine <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"@comunica/actor-init-sparql-rdfjs\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">engine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">newEngine</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">while</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">engine</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">query</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"SELECT * WHERE { ?s ?p ?o }\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">sources</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>To test, run:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"NODE_OPTIONS=--max-old-space-size=256 node ./mwe.js\n\"><pre>NODE_OPTIONS=--max-old-space-size=256 node ./mwe.js</pre></div>\n<p>(Decreasing the node-js memory is optional. It ensures you don't have to wait too long for the process to crash.)</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/LaurensRietveld/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/LaurensRietveld\">@LaurensRietveld</a></p>\n<hr>\n<h4>Environment:</h4>\n\n\n<p><code>node ./node_modules/@comunica/actor-init-sparql/bin/query.js -v</code> prints</p>\n<table role=\"table\">\n<thead>\n<tr>\n<th>software</th>\n<th>version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Comunica Init Actor</td>\n<td>1.21.1</td>\n</tr>\n<tr>\n<td>node</td>\n<td>v12.22.1</td>\n</tr>\n<tr>\n<td>npm</td>\n<td>6.14.12</td>\n</tr>\n<tr>\n<td>yarn</td>\n<td>1.22.5</td>\n</tr>\n<tr>\n<td>Operating System</td>\n<td>linux (Linux 5.8.0-53-generic)</td>\n</tr>\n</tbody>\n</table>\n<h4>Crash log:</h4>\n<details>\n<summary>Click here to (un)fold the logs</summary>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"&lt;--- Last few GCs ---&gt;\n\n[97485:0x3280eb0]    72871 ms: Mark-sweep 242.4 (261.0) -&gt; 242.4 (250.0) MB, 99.5 / 1.1 ms  (average mu = 0.138, current mu = 0.000) last resort GC in old space requested\n[97485:0x3280eb0]    72975 ms: Mark-sweep 242.4 (250.0) -&gt; 242.2 (250.0) MB, 103.3 / 1.2 ms  (average mu = 0.072, current mu = 0.000) last resort GC in old space requested\n\n\n&lt;--- JS stacktrace ---&gt;\n\n==== JS stack trace =========================================\n\n    0: ExitFrame [pc: 0x140de99]\nSecurity context: 0x0890d5f408d1 &lt;JSObject&gt;\n    1: set [0x890d5f46691](this=0x3b290c15ed31 &lt;Map map = 0x3a65e180f29&gt;,4294077,0x3b290c15ecc1 &lt;WeakReference map = 0x3a65e1a0739&gt;)\n    2: emitInitNative [0x2f0ae50c25a1] [internal/async_hooks.js:~186] [pc=0x20728fc03e01](this=0x072d3c3e1b49 &lt;PromiseWrap map = 0xc25c91dc319&gt;,4294077,0x0f2388e499d1 &lt;String[#7]: PROMISE&gt;,4294071,0x072d3c3e1b49 &lt;PromiseWrap map = 0...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: 0xa1a640 node::Abort() [node]\n 2: 0xa1aa4c node::OnFatalError(char const*, char const*) [node]\n 3: 0xb9a68e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n 4: 0xb9aa09 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\n 5: 0xd57c85  [node]\n 6: 0xd685d8 v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]\n 7: 0xd2f2cd v8::internal::Factory::NewFixedArrayWithFiller(v8::internal::RootIndex, int, v8::internal::Object, v8::internal::AllocationType) [node]\n 8: 0xd2f3c0 v8::internal::Handle&lt;v8::internal::FixedArray&gt; v8::internal::Factory::NewFixedArrayWithMap&lt;v8::internal::FixedArray&gt;(v8::internal::RootIndex, int, v8::internal::AllocationType) [node]\n 9: 0xf5e100 v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Allocate(v8::internal::Isolate*, int, v8::internal::AllocationType) [node]\n10: 0xf5e1b1 v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Rehash(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::OrderedHashMap&gt;, int) [node]\n11: 0xf5e7fb v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::EnsureGrowable(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::OrderedHashMap&gt;) [node]\n12: 0x10550c8 v8::internal::Runtime_MapGrow(int, unsigned long*, v8::internal::Isolate*) [node]\n13: 0x140de99  [node]\nAborted (core dumped)\n\"><pre><code>&lt;--- Last few GCs ---&gt;\n\n[97485:0x3280eb0]    72871 ms: Mark-sweep 242.4 (261.0) -&gt; 242.4 (250.0) MB, 99.5 / 1.1 ms  (average mu = 0.138, current mu = 0.000) last resort GC in old space requested\n[97485:0x3280eb0]    72975 ms: Mark-sweep 242.4 (250.0) -&gt; 242.2 (250.0) MB, 103.3 / 1.2 ms  (average mu = 0.072, current mu = 0.000) last resort GC in old space requested\n\n\n&lt;--- JS stacktrace ---&gt;\n\n==== JS stack trace =========================================\n\n    0: ExitFrame [pc: 0x140de99]\nSecurity context: 0x0890d5f408d1 &lt;JSObject&gt;\n    1: set [0x890d5f46691](this=0x3b290c15ed31 &lt;Map map = 0x3a65e180f29&gt;,4294077,0x3b290c15ecc1 &lt;WeakReference map = 0x3a65e1a0739&gt;)\n    2: emitInitNative [0x2f0ae50c25a1] [internal/async_hooks.js:~186] [pc=0x20728fc03e01](this=0x072d3c3e1b49 &lt;PromiseWrap map = 0xc25c91dc319&gt;,4294077,0x0f2388e499d1 &lt;String[#7]: PROMISE&gt;,4294071,0x072d3c3e1b49 &lt;PromiseWrap map = 0...\n\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: 0xa1a640 node::Abort() [node]\n 2: 0xa1aa4c node::OnFatalError(char const*, char const*) [node]\n 3: 0xb9a68e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n 4: 0xb9aa09 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\n 5: 0xd57c85  [node]\n 6: 0xd685d8 v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]\n 7: 0xd2f2cd v8::internal::Factory::NewFixedArrayWithFiller(v8::internal::RootIndex, int, v8::internal::Object, v8::internal::AllocationType) [node]\n 8: 0xd2f3c0 v8::internal::Handle&lt;v8::internal::FixedArray&gt; v8::internal::Factory::NewFixedArrayWithMap&lt;v8::internal::FixedArray&gt;(v8::internal::RootIndex, int, v8::internal::AllocationType) [node]\n 9: 0xf5e100 v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Allocate(v8::internal::Isolate*, int, v8::internal::AllocationType) [node]\n10: 0xf5e1b1 v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Rehash(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::OrderedHashMap&gt;, int) [node]\n11: 0xf5e7fb v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::EnsureGrowable(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::OrderedHashMap&gt;) [node]\n12: 0x10550c8 v8::internal::Runtime_MapGrow(int, unsigned long*, v8::internal::Isolate*) [node]\n13: 0x140de99  [node]\nAborted (core dumped)\n</code></pre></div>\n</details>\n<hr>\n<h2>Bounty</h2>\n<p>A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width:100%;\"></a></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2021-06-01T07:53:17Z"},{"title":"Throwing `Projection of ungrouped variable` error on valid query","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/120","number":120,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.\r\nThis query is valid, but throws an `Projection of ungrouped variable (?p)` error:\r\n\r\n```\r\nselect ?p (count(*) as ?n) {\r\n  [ ?p [] ].\r\n}\r\n```\r\n\r\nThis seems to be introduced by this PR: #108\r\n\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨400 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p>We're encountering issues with the most recent sparqljs releases, where the error checking is too strict.<br>\nThis query is valid, but throws an <code>Projection of ungrouped variable (?p)</code> error:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\n\"><pre><code>select ?p (count(*) as ?n) {\n  [ ?p [] ].\n}\n</code></pre></div>\n<p>This seems to be introduced by this PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"666997350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/RubenVerborgh/SPARQL.js/issues/108\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/RubenVerborgh/SPARQL.js/pull/108/hovercard\" href=\"https://github.com/RubenVerborgh/SPARQL.js/pull/108\">#108</a></p>\n<hr>\n<h2>Bounty</h2>\n<p>A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width:100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨400</td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-10-29T10:13:22Z"},{"title":"URL encoded strings are decoded in IRIs","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js/issues/39","number":39,"repository":{"name":"rdfxml-streaming-parser.js","nameWithOwner":"rdfjs/rdfxml-streaming-parser.js","url":"https://github.com/rdfjs/rdfxml-streaming-parser.js","description":"Streaming RDF/XML parser"},"assignees":{"totalCount":0,"nodes":[]},"body":"Hi, I have a rdf-xml file where an IRI contains the character sequence `&#xA;`, which is a URL encoding for newlines (`\\n`). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains `\\n`. The same can be seen for other strings such as `&gt;` and `&lt;`. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct. \r\n\r\n```javascript\r\nconst fs = require('fs');\r\nconst RdfXmlParser = require(\"rdfxml-streaming-parser\").RdfXmlParser;\r\nconst N3 = require('n3');\r\n\r\nfs.createReadStream('test.rdf')\r\n  .pipe(new RdfXmlParser())\r\n  .on('data', console.log)\r\n\r\nfs.createReadStream('test.ttl')\r\n  .pipe(new N3.StreamParser())\r\n  .on('data', console.log)\r\n```\r\n\r\ninput files: \r\n\r\n```rdf\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n         xmlns:ns0=\"b:\">\r\n\r\n  <rdf:Description rdf:about=\"a:&#xA;\">\r\n    <ns0:b rdf:resource=\"c:c\"/>\r\n  </rdf:Description>\r\n\r\n</rdf:RDF>\r\n```\r\n\r\n```turtle\r\n<a:&#xA;><b:b><c:c>.\r\n```\r\n\r\noutput:\r\n```\r\nQuad {\r\n  subject: NamedNode { value: 'a:\\n' },\r\n  predicate: NamedNode { value: 'b:b' },\r\n  object: NamedNode { value: 'c:c' },\r\n  graph: DefaultGraph { value: '' }\r\n}\r\nQuad {\r\n  subject: NamedNode { id: 'a:&#xA;' },\r\n  predicate: NamedNode { id: 'b:b' },\r\n  object: NamedNode { id: 'c:c' },\r\n  graph: DefaultGraph { id: '' }\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨800 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p>Hi, I have a rdf-xml file where an IRI contains the character sequence <code>&amp;#xA;</code>, which is a URL encoding for newlines (<code>\\n</code>). In the output of rdfxml-streaming-parser, this string is decoded, so that my IRI now instead contains <code>\\n</code>. The same can be seen for other strings such as <code>&amp;gt;</code> and <code>&amp;lt;</code>. This is different from what N3 does for turtle-family parsing. I'm not certain which approach would be correct.</p>\n<div class=\"highlight highlight-source-js position-relative\" data-snippet-clipboard-copy-content=\"const fs = require('fs');\nconst RdfXmlParser = require(&quot;rdfxml-streaming-parser&quot;).RdfXmlParser;\nconst N3 = require('n3');\n\nfs.createReadStream('test.rdf')\n  .pipe(new RdfXmlParser())\n  .on('data', console.log)\n\nfs.createReadStream('test.ttl')\n  .pipe(new N3.StreamParser())\n  .on('data', console.log)\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">RdfXmlParser</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"rdfxml-streaming-parser\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">RdfXmlParser</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">N3</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'n3'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.rdf'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RdfXmlParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test.ttl'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-c1\">N3</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">StreamParser</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">log</span><span class=\"pl-kos\">)</span></pre></div>\n<p>input files:</p>\n<div class=\"highlight highlight-text-xml position-relative\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n         xmlns:ns0=&quot;b:&quot;&gt;\n\n  &lt;rdf:Description rdf:about=&quot;a:&amp;#xA;&quot;&gt;\n    &lt;ns0:b rdf:resource=&quot;c:c&quot;/&gt;\n  &lt;/rdf:Description&gt;\n\n&lt;/rdf:RDF&gt;\n\"><pre>&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utf-8<span class=\"pl-pds\">\"</span></span> ?&gt;\n&lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">rdf</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/1999/02/22-rdf-syntax-ns#<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ns0</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b:<span class=\"pl-pds\">\"</span></span>&gt;\n\n  &lt;<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">about</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a:<span class=\"pl-c1\">&amp;#xA;</span><span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">ns0</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">b</span> <span class=\"pl-e\">rdf</span><span class=\"pl-e\">:</span><span class=\"pl-e\">resource</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>c:c<span class=\"pl-pds\">\"</span></span>/&gt;\n  &lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">Description</span>&gt;\n\n&lt;/<span class=\"pl-ent\">rdf</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">RDF</span>&gt;</pre></div>\n<div class=\"highlight highlight-source-turtle position-relative\" data-snippet-clipboard-copy-content=\"&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;.\n\"><pre><span class=\"pl-en\">&lt;a:&amp;#xA;&gt;&lt;b:b&gt;&lt;c:c&gt;</span>.</pre></div>\n<p>output:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\n\"><pre><code>Quad {\n  subject: NamedNode { value: 'a:\\n' },\n  predicate: NamedNode { value: 'b:b' },\n  object: NamedNode { value: 'c:c' },\n  graph: DefaultGraph { value: '' }\n}\nQuad {\n  subject: NamedNode { id: 'a:&amp;#xA;' },\n  predicate: NamedNode { id: 'b:b' },\n  object: NamedNode { id: 'c:c' },\n  graph: DefaultGraph { id: '' }\n}\n</code></pre></div>\n<hr>\n<h2>Bounty</h2>\n<p>A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width:100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨800</td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-30T12:55:55Z"},{"title":"Parsing issue with SPARQL query on inverse paths in anonymous node","url":"https://github.com/RubenVerborgh/SPARQL.js/issues/99","number":99,"repository":{"name":"SPARQL.js","nameWithOwner":"RubenVerborgh/SPARQL.js","url":"https://github.com/RubenVerborgh/SPARQL.js","description":"A parser for the SPARQL query language in JavaScript"},"assignees":{"totalCount":0,"nodes":[]},"body":"_Originally reported in by https://github.com/comunica/comunica/issues/677 @jaw111._\r\n\r\nThere is an odd combination of syntax that is flagged as an error.\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie a dbpedia-owl:Film ;\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\nGives the error:\r\n\r\n```\r\n# Parse error on line 21:\r\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\r\n----------------------^\r\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\r\n```\r\n\r\nWhilst removing the triple pattern for `a` works just fine:\r\n\r\n```sparql\r\nSELECT *\r\nWHERE {\r\n  ?movie\r\n    dbpedia-owl:starring [\r\n      rdfs:label \"Brad Pitt\"@en ;\r\n      ^dbpedia-owl:starring ?otherMovie\r\n    ] .\r\n}\r\n```\r\n\r\n-----\r\n\r\n## Bounty\r\n\r\nA [bounty](https://comunica.dev/association/bounties/) has been placed on this issue by:\r\n\r\n<!--bounty:placers:start-->\r\n\r\n| |\r\n|-|\r\n| [<img alt=\"Triply\" src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" height=\"25\">](https://triply.cc/) |\r\n| ‚Ç¨400 |\r\n\r\n<!--bounty:placers:end-->\r\n\r\n[Click here to learn more](https://comunica.dev/association/bounty_process/) if you're interested in claiming this bounty by resolving this issue.","bodyHTML":"<p><em>Originally reported in by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"645427878\" data-permission-text=\"Title is private\" data-url=\"https://github.com/comunica/comunica/issues/677\" data-hovercard-type=\"issue\" data-hovercard-url=\"/comunica/comunica/issues/677/hovercard\" href=\"https://github.com/comunica/comunica/issues/677\">comunica/comunica#677</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jaw111/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jaw111\">@jaw111</a>.</em></p>\n<p>There is an odd combination of syntax that is flagged as an error.</p>\n<div class=\"highlight highlight-source-sparql position-relative\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie a dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\n\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span> <span class=\"pl-k\">a</span> dbpedia-owl:Film ;\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<p>Gives the error:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"# Parse error on line 21:\n...ad Pitt&quot;@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\n\"><pre><code># Parse error on line 21:\n...ad Pitt\"@en ;      ^dbpedia-owl:starrin\n----------------------^\nExpecting 'IRIREF', 'PNAME_NS', 'VAR', '}', 'GRAPH', ';', 'a', ']', 'PNAME_LN', '.', got '^'\n</code></pre></div>\n<p>Whilst removing the triple pattern for <code>a</code> works just fine:</p>\n<div class=\"highlight highlight-source-sparql position-relative\" data-snippet-clipboard-copy-content=\"SELECT *\nWHERE {\n  ?movie\n    dbpedia-owl:starring [\n      rdfs:label &quot;Brad Pitt&quot;@en ;\n      ^dbpedia-owl:starring ?otherMovie\n    ] .\n}\n\"><pre><span class=\"pl-k\">SELECT</span> *\n<span class=\"pl-k\">WHERE</span> {\n  <span class=\"pl-c1\">?movie</span>\n    dbpedia-owl:starring [\n      rdfs:label <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Brad Pitt<span class=\"pl-pds\">\"</span><span class=\"pl-c1\">@en</span></span> ;\n      ^dbpedia-owl:starring <span class=\"pl-c1\">?otherMovie</span>\n    ] .\n}</pre></div>\n<hr>\n<h2>Bounty</h2>\n<p>A <a href=\"https://comunica.dev/association/bounties/\" rel=\"nofollow\">bounty</a> has been placed on this issue by:</p>\n\n<table role=\"table\">\n<thead>\n<tr>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://triply.cc/\" rel=\"nofollow\"><img alt=\"Triply\" src=\"https://camo.githubusercontent.com/547db41015fa10085b341e630c4dea9f2d35cf2fa0be50ade907236566191069/68747470733a2f2f6e696768746c792e747269706c7964622e636f6d2f696d67732f6c6f676f732f6c6f676f2d6c672e7376673f763d33\" height=\"25\" data-canonical-src=\"https://nightly.triplydb.com/imgs/logos/logo-lg.svg?v=3\" style=\"max-width:100%;\"></a></td>\n</tr>\n<tr>\n<td>‚Ç¨400</td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://comunica.dev/association/bounty_process/\" rel=\"nofollow\">Click here to learn more</a> if you're interested in claiming this bounty by resolving this issue.</p>","createdAt":"2020-06-25T11:32:44Z"}]}}}},"__N_SSG":true}